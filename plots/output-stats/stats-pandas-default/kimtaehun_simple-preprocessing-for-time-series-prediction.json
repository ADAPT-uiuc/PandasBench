{
  "max-mem-in-mb": 359,
  "max-mem-in-mb2": 402,
  "cells": [
    {
      "raw": "# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 245039
    },
    {
      "raw": "#load dataset\n# Alex: update paths\nproteins = pd.read_csv(\"./input/train_proteins.scaled.csv\")\npeptides = pd.read_csv(\"./input/train_peptides.scaled.csv\")\nclinical = pd.read_csv(\"./input/train_clinical_data.scaled.csv\")",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 472023898
    },
    {
      "raw": "print('proteins shape:             ', proteins.shape)\nprint('peptides shape:             ', peptides.shape)\nprint('clinical shape:             ', clinical.shape)",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 396365
    },
    {
      "raw": "proteins[proteins['patient_id'] == 55]['visit_month'].value_counts()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 1699398
    },
    {
      "raw": "peptides[peptides['patient_id'] == 55]['visit_month'].value_counts()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 2921780
    },
    {
      "raw": "# merge proteins and peptides dataset based on 'visit_id' and 'UniPort'\ndf_all = proteins.merge(peptides[['visit_id', 'UniProt', 'Peptide','PeptideAbundance']], on = ['visit_id','UniProt'], how = 'left')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 258844873
    },
    {
      "raw": "def summary(df):\n    print(f'data shape: {df.shape}')\n    summ = pd.DataFrame(df.dtypes, columns=['data type'])\n    summ['#missing'] = df.isnull().sum().values * 100\n    summ['%missing'] = df.isnull().sum().values / len(df)\n    summ['#unique'] = df.nunique().values\n    desc = pd.DataFrame(df.describe(include='all').transpose())\n    summ['min'] = desc['min'].values\n    summ['max'] = desc['max'].values\n    summ['first value'] = df.loc[0].values\n    summ['second value'] = df.loc[1].values\n    summ['third value'] = df.loc[2].values\n    \n    return summ",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 1046387
    },
    {
      "raw": "summary(df_all) # .style.background_gradient(cmap='YlOrBr')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 935433724
    },
    {
      "raw": "# group by uniprot\ndf_by_uniprot = df_all.groupby(['visit_id','UniProt'])['NPX'].mean().reset_index()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 89229818
    },
    {
      "raw": "# group by peptides\ndf_by_peptide = df_all.groupby(['visit_id','Peptide'])['PeptideAbundance'].mean().reset_index()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 200359969
    },
    {
      "raw": "# pivot groupby table for uniprot dataset\ndf_uniprot = df_by_uniprot.pivot(index='visit_id',columns = 'UniProt', values = 'NPX').rename_axis(columns=None).reset_index()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 32070511
    },
    {
      "raw": "# pivot groupby table for pepdite dataset\ndf_peptide = df_by_peptide.pivot(index='visit_id',columns = 'Peptide', values = 'PeptideAbundance').rename_axis(columns=None).reset_index()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 169267909
    },
    {
      "raw": "### let's see how these talbe looks like",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 233331
    },
    {
      "raw": "df_uniprot.sample(5)",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 556764
    },
    {
      "raw": "df_peptide.sample(5)",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 449665
    },
    {
      "raw": "# add patient id and visit month\ndf_uniprot[['patient_id','visit_month']] = df_uniprot.visit_id.str.split(\"_\", expand=True)\ndf_peptide[['patient_id','visit_month']] = df_peptide.visit_id.str.split(\"_\", expand=True)",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3580324
    },
    {
      "raw": "clinical.head(5)",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 268602
    },
    {
      "raw": "clinical.melt(id_vars=['visit_id', 'patient_id', 'visit_month', 'upd23b_clinical_state_on_medication'], \n                   var_name='updrs', value_name='rating')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 2700533
    },
    {
      "raw": "# to be continued....",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 133195
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 63078
    }
  ],
  "total-time-in-sec": 2.171525163,
  "max-disk-in-mb": 0
}