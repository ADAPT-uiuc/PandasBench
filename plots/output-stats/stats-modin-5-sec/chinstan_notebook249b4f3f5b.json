{
  "max-mem-in-mb": 3000,
  "max-mem-in-mb2": 292,
  "cells": [
    {
      "raw": "#imports \n\n# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n# FIRST-AUTHOR: remove plotting, ML code\n# import matplotlib.pyplot as plt\n# import seaborn as sns\n\n# from sklearn.linear_model import LogisticRegression\n# from sklearn.svm import SVC, LinearSVC\n# from sklearn.ensemble import RandomForestClassifier\n# from sklearn.neighbors import KNeighborsClassifier\n# from sklearn.naive_bayes import GaussianNB",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3399968913
    },
    {
      "raw": "food_df = pd.read_csv(\"./input/en.openfoodfacts.org.products.scaled.tsv\", delimiter='\\t');\n#food_df = pd.read_csv(\"FoodFacts.csv\")\n\nfood_df.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 5164099482
    },
    {
      "raw": "food_df.info()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 299802192
    },
    {
      "raw": "#split train/validate/test set\n\ntrain, validate, test = np.split(food_df.sample(frac=1), [int(.6*len(food_df)), int(.8*len(food_df))])\nprint(\"Train: %s\\nTest: %s\\nValidate: %s\" % (train.shape, test.shape, validate.shape))",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 172079580
    },
    {
      "raw": "#still working on this so I wanted to practice with a small dataset\ndf = validate\na, b = np.split(df.sample(frac=1), [int(.1*len(df))])\na.shape",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 48302846
    },
    {
      "raw": "a.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 2566224
    },
    {
      "raw": "#clean data\n#remove from entry data that has empty values in the energy\na = a[~pd.isnull(a['energy_100g'])]\na.drop([\"code\", \"url\", \"creator\", \"created_t\", \"created_datetime\", \"last_modified_t\", \"last_modified_datetime\"], axis=1)\na.describe()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 2175859737
    },
    {
      "raw": "## analyze data \n# which features are available in the dataset? \nprint(a.columns.values)",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 818671
    },
    {
      "raw": "a.describe(exclude=['O'])",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 126439373
    },
    {
      "raw": "#analyze data, get foods with only grades a, b, c, d, e\n#get only their carb/protein/fat as preliminary analysis\n\nonly_a = a.loc[a['nutrition_grade_fr'] == 'a']\nonly_b = a.loc[a['nutrition_grade_fr'] == 'b']\nonly_c = a.loc[a['nutrition_grade_fr'] == 'c']\nonly_d = a.loc[a['nutrition_grade_fr'] == 'd']\nonly_e = a.loc[a['nutrition_grade_fr'] == 'e']\n\nmac_only_a = only_a[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_b = only_b[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_c = only_c[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_d = only_d[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_e = only_e[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 1933593599
    },
    {
      "raw": "mac_only_a.describe()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 8559547
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting, get notebook to run\n# order = sorted(a.nutrition_grade_fr.unique()[1:])\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"fat_100g\", data=a, order=order)\n_ = a.nutrition_grade_fr.unique()[1:]",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 39071059
    },
    {
      "raw": "#order = sorted(a.nutrition_grade_fr.unique()[1:])\n# FIRST-AUTHOR: remove plotting\n# order = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"sugars_100g\", data=a, order=order)\n# sns.plt.title('Sugar vs Grade')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 296406
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"sugars_100g\", data=a, order=order)\n# sns.plt.title('Fat vs Grade')\n",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 276404
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"proteins_100g\", data=a, order=order)\n# sns.plt.title('Protein vs Grade')\n",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 290572
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 163643
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 161894
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 160122
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 158974
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 157091
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 155620
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 153932
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 155636
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 154297
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 164506
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 171415
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 156789
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 159392
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 160781
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 160345
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 174988
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 174743
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 162844
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 159034
    }
  ],
  "total-time-in-sec": 13.375090651,
  "max-disk-in-mb": 0
}