{
  "max-mem-in-mb": 1011,
  "max-mem-in-mb2": 1161,
  "cells": [
    {
      "raw": "import numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nexec(os.environ['IREWR_IMPORTS'])\n# FIRST-AUTHOR: remove plotting\n# import seaborn as sns\n# import matplotlib.pyplot as plt\n\n# FIRST-AUTHOR: remove path printing\n# import os\n# for dirname, _, filenames in os.walk('/kaggle/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 392982
    },
    {
      "raw": "df_summary = pd.read_csv('./input/Measurement_summary.scaled.csv')\ndf_item = pd.read_csv('./input/Measurement_item_info.scaled.csv')\ndf_station = pd.read_csv('./input/Measurement_station_info.scaled.csv')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 2316520673
    },
    {
      "raw": "df_summary.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 424377
    },
    {
      "raw": "date_time = df_summary['Measurement date'].str.split(\" \", n=1, expand=True)\ndate_time.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3072993570
    },
    {
      "raw": "df_summary['date'] = date_time[0]\ndf_summary['time'] = date_time[1]\ndf_summary = df_summary.drop(['Measurement date'], axis=1)\ndf_summary.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 240033516
    },
    {
      "raw": "df_seoul = df_summary.groupby(['date'], as_index=False).agg({'SO2':'mean', 'NO2':'mean', 'O3':'mean', 'CO':'mean', 'PM10':'mean', 'PM2.5':'mean'})\ndf_seoul.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 240923631
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# df_seoul.plot(x='date')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 172652
    },
    {
      "raw": "corr = df_seoul.corr()\n# FIRST-AUTHOR: remove plotting\n# f, ax = plt.subplots(figsize=(11, 9))\n# cmap = sns.diverging_palette(220, 10, as_cmap=True)\n# sns.heatmap(corr, cmap=cmap, vmax=1, center=0,\n#             square=True, linewidths=.5, cbar_kws={\"shrink\": .5})",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 701102
    },
    {
      "raw": "df_seoul['PM10_class'] = -1\ndf_seoul.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 602814
    },
    {
      "raw": "for (idx, row) in df_seoul.iterrows():\n    pm10 = row[5]\n    _class = -1\n    if pm10 < 0:\n        continue\n    elif pm10 < 30:\n        _class = 0\n    elif pm10 < 80:\n        _class = 1\n    elif pm10 < 150:\n        _class = 2\n    else:\n        _class = 3\n    df_seoul.loc[idx, 'PM10_class'] = _class\ndf_seoul.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 97194632
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# df_seoul['PM10_class'].value_counts().plot(kind=\"bar\")\ndf_seoul['PM10_class'].value_counts()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 563418
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# sns.jointplot(x=df_seoul[\"CO\"], y=df_seoul[\"NO2\"], kind='kde', xlim=(0,1),ylim=(0,0.13), color='g')\n# plt.show()\n_ = df_seoul[\"CO\"]\n_ = df_seoul[\"NO2\"]",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 296458
    }
  ],
  "total-time-in-sec": 5.970819825,
  "max-disk-in-mb": 0
}