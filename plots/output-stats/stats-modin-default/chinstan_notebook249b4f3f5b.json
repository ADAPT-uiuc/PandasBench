{
  "max-mem-in-mb": 2282,
  "max-mem-in-mb2": 249,
  "cells": [
    {
      "raw": "#imports \n\n# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n# FIRST-AUTHOR: remove plotting, ML code\n# import matplotlib.pyplot as plt\n# import seaborn as sns\n\n# from sklearn.linear_model import LogisticRegression\n# from sklearn.svm import SVC, LinearSVC\n# from sklearn.ensemble import RandomForestClassifier\n# from sklearn.neighbors import KNeighborsClassifier\n# from sklearn.naive_bayes import GaussianNB",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3350982408
    },
    {
      "raw": "food_df = pd.read_csv(\"./input/en.openfoodfacts.org.products.scaled.tsv\", delimiter='\\t');\n#food_df = pd.read_csv(\"FoodFacts.csv\")\n\nfood_df.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 4262970967
    },
    {
      "raw": "food_df.info()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 220792333
    },
    {
      "raw": "#split train/validate/test set\n\ntrain, validate, test = np.split(food_df.sample(frac=1), [int(.6*len(food_df)), int(.8*len(food_df))])\nprint(\"Train: %s\\nTest: %s\\nValidate: %s\" % (train.shape, test.shape, validate.shape))",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 106236092
    },
    {
      "raw": "#still working on this so I wanted to practice with a small dataset\ndf = validate\na, b = np.split(df.sample(frac=1), [int(.1*len(df))])\na.shape",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 29867757
    },
    {
      "raw": "a.head()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 2080077
    },
    {
      "raw": "#clean data\n#remove from entry data that has empty values in the energy\na = a[~pd.isnull(a['energy_100g'])]\na.drop([\"code\", \"url\", \"creator\", \"created_t\", \"created_datetime\", \"last_modified_t\", \"last_modified_datetime\"], axis=1)\na.describe()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 1145059143
    },
    {
      "raw": "## analyze data \n# which features are available in the dataset? \nprint(a.columns.values)",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 759031
    },
    {
      "raw": "a.describe(exclude=['O'])",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 119865460
    },
    {
      "raw": "#analyze data, get foods with only grades a, b, c, d, e\n#get only their carb/protein/fat as preliminary analysis\n\nonly_a = a.loc[a['nutrition_grade_fr'] == 'a']\nonly_b = a.loc[a['nutrition_grade_fr'] == 'b']\nonly_c = a.loc[a['nutrition_grade_fr'] == 'c']\nonly_d = a.loc[a['nutrition_grade_fr'] == 'd']\nonly_e = a.loc[a['nutrition_grade_fr'] == 'e']\n\nmac_only_a = only_a[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_b = only_b[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_c = only_c[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_d = only_d[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_e = only_e[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 957618608
    },
    {
      "raw": "mac_only_a.describe()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 7575208
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting, get notebook to run\n# order = sorted(a.nutrition_grade_fr.unique()[1:])\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"fat_100g\", data=a, order=order)\n_ = a.nutrition_grade_fr.unique()[1:]",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 28472527
    },
    {
      "raw": "#order = sorted(a.nutrition_grade_fr.unique()[1:])\n# FIRST-AUTHOR: remove plotting\n# order = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"sugars_100g\", data=a, order=order)\n# sns.plt.title('Sugar vs Grade')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 255150
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"sugars_100g\", data=a, order=order)\n# sns.plt.title('Fat vs Grade')\n",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 222334
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"proteins_100g\", data=a, order=order)\n# sns.plt.title('Protein vs Grade')\n",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 224930
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 143732
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 140093
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 146876
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 154505
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 179241
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 174246
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 179352
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 177308
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 173469
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 177294
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 185713
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 185209
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 178287
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 178511
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 180207
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 172660
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 180165
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 180069
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 177315
    }
  ],
  "total-time-in-sec": 10.236246277,
  "max-disk-in-mb": 0
}