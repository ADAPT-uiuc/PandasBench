{
  "max-mem-in-mb": 1829,
  "max-mem-in-mb2": 613,
  "cells": [
    {
      "raw": "# *Normalize first big Dataset*",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 209543
    },
    {
      "raw": "# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nexec(os.environ['IREWR_IMPORTS'])\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# ALEX: remove path printing\n# import os\n# for dirname, _, filenames in os.walk('./input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3377076072
    },
    {
      "raw": "# import pandas as pd\n# import numpy as np",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 353759
    },
    {
      "raw": "\ndf = pd.read_csv('./input/Measurement_summary.scaled.csv')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3190811817
    },
    {
      "raw": "df.shape",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 512370
    },
    {
      "raw": "df.isnull().sum()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 22773773
    },
    {
      "raw": "for x in [\"SO2\",\"NO2\",\"O3\",\"CO\",\"PM10\",\"PM2.5\"]:\n    print(x+\" : \")\n    print(df[x].describe())",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 636795336
    },
    {
      "raw": "for x in [\"SO2\",\"NO2\",\"O3\",\"CO\",\"PM10\",\"PM2.5\"]:\n    df=df[df[x]>0]",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 2491490125
    },
    {
      "raw": "df.describe()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 16460945
    },
    {
      "raw": "df[df[\"Station code\"]==101]",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 138558349
    },
    {
      "raw": "del df[\"Latitude\"]\ndel df[\"Longitude\"]\ndel df[\"Address\"]",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 4588391
    },
    {
      "raw": "def normalize_data(x):\n    index=[]\n    \n    for date in x:\n        normalized= date.split(' ')\n        normalized= normalized[0].split('-')+normalized[1].split(':')\n        index.append(normalized)\n        \n    \n    return pd.DataFrame(index,columns=[\"Year\",\"Month\",\"Day\",\"Hour\",\"Min\"])",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 971857
    },
    {
      "raw": "df_data_normalized=normalize_data(df[\"Measurement date\"])\nprint(f'Normalized date shape {df_data_normalized.shape}.')\nprint(f'Original Df shape {df.shape}.')\n\ndf_normalized=pd.concat([df,df_data_normalized],axis=1)\nprint(f'Final shape {df_normalized.shape}')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3238647357
    },
    {
      "raw": "df_normalized",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 497734
    },
    {
      "raw": "df_final=df_normalized.dropna()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 4833514
    },
    {
      "raw": "del df_final['Measurement date']",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 2317099
    },
    {
      "raw": "df_final",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 514832
    },
    {
      "raw": "df_final['Min'].value_counts()\n",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 1690574063
    },
    {
      "raw": "del df_final['Min']",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 1705031
    },
    {
      "raw": "df_final",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 430214
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 178275
    }
  ],
  "total-time-in-sec": 14.820300456,
  "max-disk-in-mb": 0
}