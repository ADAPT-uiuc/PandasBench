{
  "max-mem-in-mb": 1571,
  "max-mem-in-mb2": 2871,
  "cells": [
    {
      "raw": "# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nexec(os.environ['IREWR_IMPORTS'])\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n# FIRST-AUTHOR: remove path printing\n# import os\n# print(os.listdir(\"./input\"))\n\n# Any results you write to the current directory are saved as output.",
      "rewrite-ns": 729536,
      "overhead-ns": 729536,
      "exec-ns": 429199,
      "total-ns": 1158735,
      "patts-hit": {},
      "rewritten": "import numpy as np\nexec(os.environ['IREWR_IMPORTS'])\n"
    },
    {
      "raw": "data = pd.read_csv('./input/train_V2.scaled.csv')\n\ndata.loc[:5,]",
      "rewrite-ns": 998456,
      "overhead-ns": 998456,
      "exec-ns": 5816011780,
      "total-ns": 5817010236,
      "patts-hit": {},
      "rewritten": "data = pd.read_csv('./input/train_V2.scaled.csv')\ndata.loc[:5,]\n"
    },
    {
      "raw": "data_solo_example = data.loc[data.matchId == data.loc[data.matchType=='solo','matchId'].iloc[0],:].sort_values(by='winPlacePerc',ascending=False)\nprint(data_solo_example)\n\nprint('This example has {} players.'.format(len(data_solo_example.Id)))\nprint('This example has {} groups.'.format(len(data_solo_example.groupId.unique())))\n",
      "rewrite-ns": 2329205,
      "overhead-ns": 2329205,
      "exec-ns": 241877849,
      "total-ns": 244207054,
      "patts-hit": {
        "LenUnique": 1
      },
      "rewritten": "data_solo_example = data.loc[data.matchId == data.loc[data.matchType ==\n    'solo', 'matchId'].iloc[0], :].sort_values(by='winPlacePerc', ascending\n    =False)\nprint(data_solo_example)\nprint('This example has {} players.'.format(len(data_solo_example.Id)))\nprint('This example has {} groups.'.format(dias.rewriter.len_unique(series=\n    data_solo_example.groupId)))\n"
    },
    {
      "raw": "[x-data_solo_example.winPlacePerc.iloc[i+1] for i, x in enumerate(data_solo_example.winPlacePerc) if i < len(data_solo_example.winPlacePerc)-1]",
      "rewrite-ns": 1501554,
      "overhead-ns": 1501554,
      "exec-ns": 1957564,
      "total-ns": 3459118,
      "patts-hit": {},
      "rewritten": "[(x - data_solo_example.winPlacePerc.iloc[i + 1]) for i, x in enumerate(\n    data_solo_example.winPlacePerc) if i < len(data_solo_example.\n    winPlacePerc) - 1]\n"
    },
    {
      "raw": "data_solo_example.loc[data_solo_example.groupId.isin(\n    list(data_solo_example.groupId.value_counts().loc[data_solo_example.groupId.value_counts()>1].index\n        ))]",
      "rewrite-ns": 1301892,
      "overhead-ns": 1301892,
      "exec-ns": 16563579,
      "total-ns": 17865471,
      "patts-hit": {},
      "rewritten": "data_solo_example.loc[data_solo_example.groupId.isin(list(data_solo_example\n    .groupId.value_counts().loc[data_solo_example.groupId.value_counts() > \n    1].index))]\n"
    },
    {
      "raw": "data_duo_example = data.loc[data.matchId == data.loc[data.matchType=='duo','matchId'].iloc[0],:].sort_values(by='winPlacePerc',ascending=False)\nprint(data_duo_example)\n\nprint('This example has {} players.'.format(len(data_duo_example.Id)))\nprint('This example has {} groups.'.format(len(data_duo_example.groupId.unique())))\n",
      "rewrite-ns": 2226982,
      "overhead-ns": 2226982,
      "exec-ns": 246150781,
      "total-ns": 248377763,
      "patts-hit": {
        "LenUnique": 1
      },
      "rewritten": "data_duo_example = data.loc[data.matchId == data.loc[data.matchType ==\n    'duo', 'matchId'].iloc[0], :].sort_values(by='winPlacePerc', ascending=\n    False)\nprint(data_duo_example)\nprint('This example has {} players.'.format(len(data_duo_example.Id)))\nprint('This example has {} groups.'.format(dias.rewriter.len_unique(series=\n    data_duo_example.groupId)))\n"
    },
    {
      "raw": "data_duo_example.maxPlace",
      "rewrite-ns": 77928,
      "overhead-ns": 77928,
      "exec-ns": 1165507,
      "total-ns": 1243435,
      "patts-hit": {},
      "rewritten": "data_duo_example.maxPlace\n"
    },
    {
      "raw": "data_duo_example.loc[data_duo_example.groupId.isin(\n    list(data_duo_example.groupId.value_counts().loc[data_duo_example.groupId.value_counts()>2].index\n        ))]",
      "rewrite-ns": 1307786,
      "overhead-ns": 1307786,
      "exec-ns": 16825219,
      "total-ns": 18133005,
      "patts-hit": {},
      "rewritten": "data_duo_example.loc[data_duo_example.groupId.isin(list(data_duo_example.\n    groupId.value_counts().loc[data_duo_example.groupId.value_counts() > 2]\n    .index))]\n"
    },
    {
      "raw": "data_squad_example = data.loc[data.matchId == data.loc[data.matchType=='squad','matchId'].iloc[0],:].sort_values(by='winPlacePerc',ascending=False)\nprint(data_squad_example)\n\nprint('This example has {} players.'.format(len(data_squad_example.Id)))\nprint('This example has {} groups.'.format(len(data_squad_example.groupId.unique())))\n",
      "rewrite-ns": 2224924,
      "overhead-ns": 2224924,
      "exec-ns": 251017565,
      "total-ns": 253242489,
      "patts-hit": {
        "LenUnique": 1
      },
      "rewritten": "data_squad_example = data.loc[data.matchId == data.loc[data.matchType ==\n    'squad', 'matchId'].iloc[0], :].sort_values(by='winPlacePerc',\n    ascending=False)\nprint(data_squad_example)\nprint('This example has {} players.'.format(len(data_squad_example.Id)))\nprint('This example has {} groups.'.format(dias.rewriter.len_unique(series=\n    data_squad_example.groupId)))\n"
    },
    {
      "raw": "data_squad_example.maxPlace",
      "rewrite-ns": 74074,
      "overhead-ns": 74074,
      "exec-ns": 1086789,
      "total-ns": 1160863,
      "patts-hit": {},
      "rewritten": "data_squad_example.maxPlace\n"
    },
    {
      "raw": "data_squad_example.loc[data_squad_example.groupId.isin(\n    list(data_squad_example.groupId.value_counts().loc[data_squad_example.groupId.value_counts()>4].index\n        ))]",
      "rewrite-ns": 1256724,
      "overhead-ns": 1256724,
      "exec-ns": 16581311,
      "total-ns": 17838035,
      "patts-hit": {},
      "rewritten": "data_squad_example.loc[data_squad_example.groupId.isin(list(\n    data_squad_example.groupId.value_counts().loc[data_squad_example.\n    groupId.value_counts() > 4].index))]\n"
    },
    {
      "raw": "",
      "rewrite-ns": 14973,
      "overhead-ns": 14973,
      "exec-ns": 86659,
      "total-ns": 101632,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 6.623797836,
  "max-disk-in-mb": 0
}