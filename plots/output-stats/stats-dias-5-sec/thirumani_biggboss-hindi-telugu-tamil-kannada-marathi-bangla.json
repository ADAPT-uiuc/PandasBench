{
  "max-mem-in-mb": 585,
  "max-mem-in-mb2": 1060,
  "cells": [
    {
      "raw": "import numpy as np\n# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\npd.set_option('display.max_columns', 50)\n\n# ALEX: remove plotting\n# import matplotlib.pyplot as plt\n# import seaborn as sns\n\n# import warnings\n# warnings.filterwarnings('ignore')",
      "rewrite-ns": 1090469,
      "overhead-ns": 1090469,
      "exec-ns": 508755,
      "total-ns": 1599224,
      "patts-hit": {},
      "rewritten": "import numpy as np\nexec(os.environ['IREWR_IMPORTS'])\npd.set_option('display.max_columns', 50)\n"
    },
    {
      "raw": "bigg_boss = pd.read_csv('./input/Bigg_Boss_India.scaled.csv', encoding = \"ISO-8859-1\")\nnRow, nCol = bigg_boss.shape\nprint(f'There are {nRow} rows and {nCol} columns')",
      "rewrite-ns": 1729382,
      "overhead-ns": 1729382,
      "exec-ns": 2478622435,
      "total-ns": 2480351817,
      "patts-hit": {},
      "rewritten": "bigg_boss = pd.read_csv('./input/Bigg_Boss_India.scaled.csv', encoding=\n    'ISO-8859-1')\nnRow, nCol = bigg_boss.shape\nprint(f'There are {nRow} rows and {nCol} columns')\n"
    },
    {
      "raw": "bigg_boss.head(5)",
      "rewrite-ns": 196278,
      "overhead-ns": 196278,
      "exec-ns": 9780919,
      "total-ns": 9977197,
      "patts-hit": {},
      "rewritten": "bigg_boss.head(5)\n"
    },
    {
      "raw": "bigg_boss.tail(10).T",
      "rewrite-ns": 403976,
      "overhead-ns": 403976,
      "exec-ns": 4809481,
      "total-ns": 5213457,
      "patts-hit": {},
      "rewritten": "bigg_boss.tail(10).T\n"
    },
    {
      "raw": "bigg_boss.sample(10)",
      "rewrite-ns": 98601,
      "overhead-ns": 98601,
      "exec-ns": 24210221,
      "total-ns": 24308822,
      "patts-hit": {},
      "rewritten": "bigg_boss.sample(10)\n"
    },
    {
      "raw": "bigg_boss.info()",
      "rewrite-ns": 84600,
      "overhead-ns": 84600,
      "exec-ns": 1551131180,
      "total-ns": 1551215780,
      "patts-hit": {},
      "rewritten": "bigg_boss.info()\n"
    },
    {
      "raw": "bigg_boss.describe()",
      "rewrite-ns": 103520,
      "overhead-ns": 103520,
      "exec-ns": 351046316,
      "total-ns": 351149836,
      "patts-hit": {},
      "rewritten": "bigg_boss.describe()\n"
    },
    {
      "raw": "# Unique values in each column\nfor col in bigg_boss.columns:\n    print(\"Number of unique values in\", col,\"-\", bigg_boss[col].nunique())",
      "rewrite-ns": 861581,
      "overhead-ns": 861581,
      "exec-ns": 504986927,
      "total-ns": 505848508,
      "patts-hit": {},
      "rewritten": "for col in bigg_boss.columns:\n    print('Number of unique values in', col, '-', bigg_boss[col].nunique())\n"
    },
    {
      "raw": "# Number of seasons in all Indian languages\nprint(bigg_boss.groupby('Language')['Season Number'].nunique().sum())\n\n# 35 seasons happened (including current seasons)",
      "rewrite-ns": 771386,
      "overhead-ns": 771386,
      "exec-ns": 72072609,
      "total-ns": 72843995,
      "patts-hit": {},
      "rewritten": "print(bigg_boss.groupby('Language')['Season Number'].nunique().sum())\n"
    },
    {
      "raw": "# Number of seasons in each Indian language\nprint(bigg_boss.groupby('Language')['Season Number'].nunique().nlargest(10))",
      "rewrite-ns": 817389,
      "overhead-ns": 817389,
      "exec-ns": 71720102,
      "total-ns": 72537491,
      "patts-hit": {},
      "rewritten": "print(bigg_boss.groupby('Language')['Season Number'].nunique().nlargest(10))\n"
    },
    {
      "raw": "# Total number of Bigg Boss housemates\n# ALEX: remove plotting\n# fig = plt.figure(figsize=(10,4))\n# ax = sns.countplot(x='Language', data=bigg_boss)\n# ax.set_title('Bigg Boss Series - Indian Language')\n# for t in ax.patches:\n#     if (np.isnan(float(t.get_height()))):\n#         ax.annotate(0, (t.get_x(), 0))\n#     else:\n#         ax.annotate(str(format(int(t.get_height()), ',d')), (t.get_x(), t.get_height()*1.01))",
      "rewrite-ns": 25594,
      "overhead-ns": 25594,
      "exec-ns": 111571,
      "total-ns": 137165,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Number of normal entries and wild card entries\nprint(bigg_boss['Wild Card'].value_counts(), \"\\n\")\nprint(round(bigg_boss['Wild Card'].value_counts(normalize=True)*100))\n# ALEX: remove plotting\n# sns.countplot(x='Wild Card', data=bigg_boss)",
      "rewrite-ns": 1237168,
      "overhead-ns": 1237168,
      "exec-ns": 65285422,
      "total-ns": 66522590,
      "patts-hit": {},
      "rewritten": "print(bigg_boss['Wild Card'].value_counts(), '\\n')\nprint(round(bigg_boss['Wild Card'].value_counts(normalize=True) * 100))\n"
    },
    {
      "raw": "# Common people has many professions, so clubbing them into one category\n# ALEX: make notebook run\n# bigg_boss.loc[bigg_boss['Profession'].str.contains('Commoner'),'Profession']='Commoner'\nbigg_boss.loc[bigg_boss['Profession'].str.contains('Commoner', na=False),'Profession']='Commoner'",
      "rewrite-ns": 898852,
      "overhead-ns": 898852,
      "exec-ns": 213231704,
      "total-ns": 214130556,
      "patts-hit": {},
      "rewritten": "bigg_boss.loc[bigg_boss['Profession'].str.contains('Commoner', na=False),\n    'Profession'] = 'Commoner'\n"
    },
    {
      "raw": "# Participant's Profession\nprint(bigg_boss['Profession'].value_counts())\n# ALEX: remove plotting\n# fig = plt.figure(figsize=(25,8))\n# sns.countplot(x='Profession', data=bigg_boss)\n# plt.xticks(rotation=90)",
      "rewrite-ns": 492200,
      "overhead-ns": 492200,
      "exec-ns": 32725831,
      "total-ns": 33218031,
      "patts-hit": {},
      "rewritten": "print(bigg_boss['Profession'].value_counts())\n"
    },
    {
      "raw": "# Broadcastor\n# ALEX: remove plotting\n# fig = plt.figure(figsize=(20,5))\n# ax = sns.countplot(x='Broadcasted By', data=bigg_boss, palette='RdBu')\n# ax.set_title('Bigg Boss Series - Indian Broadcastor & Total Number of Housemates')\n# for t in ax.patches:\n#     if (np.isnan(float(t.get_height()))):\n#         ax.annotate(0, (t.get_x(), 0))\n#     else:\n#         ax.annotate(str(format(int(t.get_height()), ',d')), (t.get_x(), t.get_height()*1.01))",
      "rewrite-ns": 16292,
      "overhead-ns": 16292,
      "exec-ns": 83882,
      "total-ns": 100174,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "bigg_boss.groupby('Host Name')['Season Number'].nunique().nlargest(25)",
      "rewrite-ns": 676897,
      "overhead-ns": 676897,
      "exec-ns": 74037083,
      "total-ns": 74713980,
      "patts-hit": {},
      "rewritten": "bigg_boss.groupby('Host Name')['Season Number'].nunique().nlargest(25)\n"
    },
    {
      "raw": "# Housemate's Gender\nprint(bigg_boss['Gender'].value_counts())",
      "rewrite-ns": 525067,
      "overhead-ns": 525067,
      "exec-ns": 32153564,
      "total-ns": 32678631,
      "patts-hit": {},
      "rewritten": "print(bigg_boss['Gender'].value_counts())\n"
    },
    {
      "raw": "# Maximum TRP of Bigg Boss Hindi/India seasons\nprint(\"Maximum TRP\",bigg_boss['Average TRP'].max(), \"\\n\")\nprint(bigg_boss.loc[bigg_boss['Average TRP']==bigg_boss['Average TRP'].max()][[\"Language\",\"Season Number\"]].head(1).to_string(index=False))",
      "rewrite-ns": 1862300,
      "overhead-ns": 1862300,
      "exec-ns": 12099430,
      "total-ns": 13961730,
      "patts-hit": {},
      "rewritten": "print('Maximum TRP', bigg_boss['Average TRP'].max(), '\\n')\nprint(bigg_boss.loc[bigg_boss['Average TRP'] == bigg_boss['Average TRP'].\n    max()][['Language', 'Season Number']].head(1).to_string(index=False))\n"
    },
    {
      "raw": "# Longest season of Bigg Boss Hindi/India seasons\nprint(\"Longest season\",bigg_boss['Season Length'].max(), \"days \\n\")\nprint(bigg_boss.loc[bigg_boss['Season Length']==bigg_boss['Season Length'].max()][[\"Language\",\"Season Number\"]].head(1).to_string(index=False))",
      "rewrite-ns": 1814249,
      "overhead-ns": 1814249,
      "exec-ns": 11657569,
      "total-ns": 13471818,
      "patts-hit": {},
      "rewritten": "print('Longest season', bigg_boss['Season Length'].max(), 'days \\n')\nprint(bigg_boss.loc[bigg_boss['Season Length'] == bigg_boss['Season Length'\n    ].max()][['Language', 'Season Number']].head(1).to_string(index=False))\n"
    },
    {
      "raw": "# All BB Winners\nbigg_boss.loc[bigg_boss.Winner==1]",
      "rewrite-ns": 501968,
      "overhead-ns": 501968,
      "exec-ns": 33084789,
      "total-ns": 33586757,
      "patts-hit": {},
      "rewritten": "bigg_boss.loc[bigg_boss.Winner == 1]\n"
    },
    {
      "raw": "# Profession of BB Season Winners\nbigg_boss.loc[bigg_boss.Winner==1,'Profession'].value_counts()",
      "rewrite-ns": 734005,
      "overhead-ns": 734005,
      "exec-ns": 5360275,
      "total-ns": 6094280,
      "patts-hit": {},
      "rewritten": "bigg_boss.loc[bigg_boss.Winner == 1, 'Profession'].value_counts()\n"
    },
    {
      "raw": "# Gender of Season title Winners\nprint(bigg_boss.loc[bigg_boss.Winner==1,'Gender'].value_counts(),'\\n')\n\n# In percentage\nprint(round(bigg_boss.loc[bigg_boss.Winner==1,'Gender'].value_counts(normalize=True)*100))",
      "rewrite-ns": 1777107,
      "overhead-ns": 1777107,
      "exec-ns": 9030519,
      "total-ns": 10807626,
      "patts-hit": {},
      "rewritten": "print(bigg_boss.loc[bigg_boss.Winner == 1, 'Gender'].value_counts(), '\\n')\nprint(round(bigg_boss.loc[bigg_boss.Winner == 1, 'Gender'].value_counts(\n    normalize=True) * 100))\n"
    },
    {
      "raw": "# Entry type of the Season Winners\nbigg_boss.loc[bigg_boss.Winner==1,'Wild Card'].value_counts()",
      "rewrite-ns": 707305,
      "overhead-ns": 707305,
      "exec-ns": 4645920,
      "total-ns": 5353225,
      "patts-hit": {},
      "rewritten": "bigg_boss.loc[bigg_boss.Winner == 1, 'Wild Card'].value_counts()\n"
    },
    {
      "raw": "# No re-entered contestant won Bigg Boss title\n# ALEX: make notebook run\n# bigg_boss.loc[bigg_boss.Winner==1,'Number of re-entries'].value_counts()\nbigg_boss.loc[bigg_boss.Winner==1,'Number of Re-entries'].value_counts()",
      "rewrite-ns": 701275,
      "overhead-ns": 701275,
      "exec-ns": 4261615,
      "total-ns": 4962890,
      "patts-hit": {},
      "rewritten": "bigg_boss.loc[bigg_boss.Winner == 1, 'Number of Re-entries'].value_counts()\n"
    },
    {
      "raw": "# Number of eliminations or evictions faced by the Bigg Boss competition winners\nbigg_boss.loc[bigg_boss.Winner==1,'Number of Evictions Faced'].value_counts().sort_index()\n\n# Number of eliminations faced - Number of Winners",
      "rewrite-ns": 813545,
      "overhead-ns": 813545,
      "exec-ns": 3512759,
      "total-ns": 4326304,
      "patts-hit": {},
      "rewritten": "bigg_boss.loc[bigg_boss.Winner == 1, 'Number of Evictions Faced'].value_counts(\n    ).sort_index()\n"
    },
    {
      "raw": "# Bigg Boss winners Number of times elected as Captain\n# ALEX: make notebook run\n# bigg_boss.loc[bigg_boss.Winner==1,'Number of times elected as Captain'].value_counts().sort_index()\nbigg_boss.loc[bigg_boss.Winner==1,'Number of Times Elected as Captain'].value_counts().sort_index()\n\n# Number of times elected as Captain   - Number of winners",
      "rewrite-ns": 824711,
      "overhead-ns": 824711,
      "exec-ns": 3201613,
      "total-ns": 4026324,
      "patts-hit": {},
      "rewritten": "bigg_boss.loc[bigg_boss.Winner == 1, 'Number of Times Elected as Captain'\n    ].value_counts().sort_index()\n"
    },
    {
      "raw": "# ALEX: remove pandas profiling\n# import pandas_profiling\n# pandas_profiling.ProfileReport(bigg_boss)",
      "rewrite-ns": 14430,
      "overhead-ns": 14430,
      "exec-ns": 76208,
      "total-ns": 90638,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 11589,
      "overhead-ns": 11589,
      "exec-ns": 69335,
      "total-ns": 80924,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 10166,
      "overhead-ns": 10166,
      "exec-ns": 59862,
      "total-ns": 70028,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 5.593379798,
  "max-disk-in-mb": 0
}