{
  "max-mem-in-mb": 1300,
  "max-mem-in-mb2": 1748,
  "cells": [
    {
      "raw": "#imports \n\n# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n# FIRST-AUTHOR: remove plotting, ML code\n# import matplotlib.pyplot as plt\n# import seaborn as sns\n\n# from sklearn.linear_model import LogisticRegression\n# from sklearn.svm import SVC, LinearSVC\n# from sklearn.ensemble import RandomForestClassifier\n# from sklearn.neighbors import KNeighborsClassifier\n# from sklearn.naive_bayes import GaussianNB",
      "rewrite-ns": 510195,
      "overhead-ns": 510195,
      "exec-ns": 265336,
      "total-ns": 775531,
      "patts-hit": {},
      "rewritten": "exec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n"
    },
    {
      "raw": "food_df = pd.read_csv(\"./input/en.openfoodfacts.org.products.scaled.tsv\", delimiter='\\t');\n#food_df = pd.read_csv(\"FoodFacts.csv\")\n\nfood_df.head()",
      "rewrite-ns": 513961,
      "overhead-ns": 513961,
      "exec-ns": 5051643748,
      "total-ns": 5052157709,
      "patts-hit": {},
      "rewritten": "food_df = pd.read_csv('./input/en.openfoodfacts.org.products.scaled.tsv',\n    delimiter='\\t')\nfood_df.head()\n"
    },
    {
      "raw": "food_df.info()",
      "rewrite-ns": 149684,
      "overhead-ns": 149684,
      "exec-ns": 6362631,
      "total-ns": 6512315,
      "patts-hit": {},
      "rewritten": "food_df.info()\n"
    },
    {
      "raw": "#split train/validate/test set\n\ntrain, validate, test = np.split(food_df.sample(frac=1), [int(.6*len(food_df)), int(.8*len(food_df))])\nprint(\"Train: %s\\nTest: %s\\nValidate: %s\" % (train.shape, test.shape, validate.shape))",
      "rewrite-ns": 2188906,
      "overhead-ns": 2188906,
      "exec-ns": 633757746,
      "total-ns": 635946652,
      "patts-hit": {},
      "rewritten": "train, validate, test = np.split(food_df.sample(frac=1), [int(0.6 * len(\n    food_df)), int(0.8 * len(food_df))])\nprint(\"\"\"Train: %s\nTest: %s\nValidate: %s\"\"\" % (train.shape, test.shape,\n    validate.shape))\n"
    },
    {
      "raw": "#still working on this so I wanted to practice with a small dataset\ndf = validate\na, b = np.split(df.sample(frac=1), [int(.1*len(df))])\na.shape",
      "rewrite-ns": 1323386,
      "overhead-ns": 1323386,
      "exec-ns": 125001000,
      "total-ns": 126324386,
      "patts-hit": {},
      "rewritten": "df = validate\na, b = np.split(df.sample(frac=1), [int(0.1 * len(df))])\na.shape\n"
    },
    {
      "raw": "a.head()",
      "rewrite-ns": 118785,
      "overhead-ns": 118785,
      "exec-ns": 38690566,
      "total-ns": 38809351,
      "patts-hit": {},
      "rewritten": "a.head()\n"
    },
    {
      "raw": "#clean data\n#remove from entry data that has empty values in the energy\na = a[~pd.isnull(a['energy_100g'])]\na.drop([\"code\", \"url\", \"creator\", \"created_t\", \"created_datetime\", \"last_modified_t\", \"last_modified_datetime\"], axis=1)\na.describe()",
      "rewrite-ns": 1354879,
      "overhead-ns": 1354879,
      "exec-ns": 158943814,
      "total-ns": 160298693,
      "patts-hit": {},
      "rewritten": "a = a[~pd.isnull(a['energy_100g'])]\na.drop(['code', 'url', 'creator', 'created_t', 'created_datetime',\n    'last_modified_t', 'last_modified_datetime'], axis=1)\na.describe()\n"
    },
    {
      "raw": "## analyze data \n# which features are available in the dataset? \nprint(a.columns.values)",
      "rewrite-ns": 386007,
      "overhead-ns": 386007,
      "exec-ns": 502092,
      "total-ns": 888099,
      "patts-hit": {},
      "rewritten": "print(a.columns.values)\n"
    },
    {
      "raw": "a.describe(exclude=['O'])",
      "rewrite-ns": 118395,
      "overhead-ns": 118395,
      "exec-ns": 152284648,
      "total-ns": 152403043,
      "patts-hit": {},
      "rewritten": "a.describe(exclude=['O'])\n"
    },
    {
      "raw": "#analyze data, get foods with only grades a, b, c, d, e\n#get only their carb/protein/fat as preliminary analysis\n\nonly_a = a.loc[a['nutrition_grade_fr'] == 'a']\nonly_b = a.loc[a['nutrition_grade_fr'] == 'b']\nonly_c = a.loc[a['nutrition_grade_fr'] == 'c']\nonly_d = a.loc[a['nutrition_grade_fr'] == 'd']\nonly_e = a.loc[a['nutrition_grade_fr'] == 'e']\n\nmac_only_a = only_a[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_b = only_b[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_c = only_c[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_d = only_d[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_e = only_e[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]",
      "rewrite-ns": 4269330,
      "overhead-ns": 4269330,
      "exec-ns": 6169291,
      "total-ns": 10438621,
      "patts-hit": {},
      "rewritten": "only_a = a.loc[a['nutrition_grade_fr'] == 'a']\nonly_b = a.loc[a['nutrition_grade_fr'] == 'b']\nonly_c = a.loc[a['nutrition_grade_fr'] == 'c']\nonly_d = a.loc[a['nutrition_grade_fr'] == 'd']\nonly_e = a.loc[a['nutrition_grade_fr'] == 'e']\nmac_only_a = only_a[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_b = only_b[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_c = only_c[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_d = only_d[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_e = only_e[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\n"
    },
    {
      "raw": "mac_only_a.describe()",
      "rewrite-ns": 82869,
      "overhead-ns": 82869,
      "exec-ns": 7922545,
      "total-ns": 8005414,
      "patts-hit": {},
      "rewritten": "mac_only_a.describe()\n"
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting, get notebook to run\n# order = sorted(a.nutrition_grade_fr.unique()[1:])\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"fat_100g\", data=a, order=order)\n_ = a.nutrition_grade_fr.unique()[1:]",
      "rewrite-ns": 527871,
      "overhead-ns": 527871,
      "exec-ns": 351274,
      "total-ns": 879145,
      "patts-hit": {},
      "rewritten": "_ = a.nutrition_grade_fr.unique()[1:]\n"
    },
    {
      "raw": "#order = sorted(a.nutrition_grade_fr.unique()[1:])\n# FIRST-AUTHOR: remove plotting\n# order = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"sugars_100g\", data=a, order=order)\n# sns.plt.title('Sugar vs Grade')",
      "rewrite-ns": 14184,
      "overhead-ns": 14184,
      "exec-ns": 73605,
      "total-ns": 87789,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"sugars_100g\", data=a, order=order)\n# sns.plt.title('Fat vs Grade')\n",
      "rewrite-ns": 11147,
      "overhead-ns": 11147,
      "exec-ns": 63830,
      "total-ns": 74977,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"proteins_100g\", data=a, order=order)\n# sns.plt.title('Protein vs Grade')\n",
      "rewrite-ns": 10198,
      "overhead-ns": 10198,
      "exec-ns": 59010,
      "total-ns": 69208,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9234,
      "overhead-ns": 9234,
      "exec-ns": 57705,
      "total-ns": 66939,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9074,
      "overhead-ns": 9074,
      "exec-ns": 56930,
      "total-ns": 66004,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9330,
      "overhead-ns": 9330,
      "exec-ns": 55315,
      "total-ns": 64645,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9083,
      "overhead-ns": 9083,
      "exec-ns": 54866,
      "total-ns": 63949,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9195,
      "overhead-ns": 9195,
      "exec-ns": 54248,
      "total-ns": 63443,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 8987,
      "overhead-ns": 8987,
      "exec-ns": 58161,
      "total-ns": 67148,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9286,
      "overhead-ns": 9286,
      "exec-ns": 56335,
      "total-ns": 65621,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9175,
      "overhead-ns": 9175,
      "exec-ns": 55250,
      "total-ns": 64425,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9265,
      "overhead-ns": 9265,
      "exec-ns": 55249,
      "total-ns": 64514,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9215,
      "overhead-ns": 9215,
      "exec-ns": 54876,
      "total-ns": 64091,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9151,
      "overhead-ns": 9151,
      "exec-ns": 55153,
      "total-ns": 64304,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9304,
      "overhead-ns": 9304,
      "exec-ns": 54058,
      "total-ns": 63362,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9022,
      "overhead-ns": 9022,
      "exec-ns": 53272,
      "total-ns": 62294,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9097,
      "overhead-ns": 9097,
      "exec-ns": 53112,
      "total-ns": 62209,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9231,
      "overhead-ns": 9231,
      "exec-ns": 53817,
      "total-ns": 63048,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9185,
      "overhead-ns": 9185,
      "exec-ns": 53804,
      "total-ns": 62989,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9143,
      "overhead-ns": 9143,
      "exec-ns": 53996,
      "total-ns": 63139,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9145,
      "overhead-ns": 9145,
      "exec-ns": 54279,
      "total-ns": 63424,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 8929,
      "overhead-ns": 8929,
      "exec-ns": 53945,
      "total-ns": 62874,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 6.194889355,
  "max-disk-in-mb": 0
}