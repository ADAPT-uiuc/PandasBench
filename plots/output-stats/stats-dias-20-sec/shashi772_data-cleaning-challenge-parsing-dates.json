{
  "max-mem-in-mb": 5163,
  "max-mem-in-mb2": 8335,
  "cells": [
    {
      "raw": "# modules we'll use\n# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n# ALEX: remove plotting\n# import seaborn as sns\n# import datetime\n\n# read in our data\nearthquakes = pd.read_csv(\"./input/earthquake-database.scaled.csv\")\nlandslides = pd.read_csv(\"./input/catalog.scaled.csv\")\nvolcanos = pd.read_csv(\"./input/volcanic-eruptions-database.scaled.csv\")\n\n# set seed for reproducibility\nnp.random.seed(0)",
      "rewrite-ns": 2260167,
      "overhead-ns": 2260167,
      "exec-ns": 19875249476,
      "total-ns": 19877509643,
      "patts-hit": {},
      "rewritten": "exec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\nearthquakes = pd.read_csv('./input/earthquake-database.scaled.csv')\nlandslides = pd.read_csv('./input/catalog.scaled.csv')\nvolcanos = pd.read_csv('./input/volcanic-eruptions-database.scaled.csv')\nnp.random.seed(0)\n"
    },
    {
      "raw": "# print the first few rows of the date column\nprint(landslides['date'].head())",
      "rewrite-ns": 642882,
      "overhead-ns": 642882,
      "exec-ns": 1235284,
      "total-ns": 1878166,
      "patts-hit": {},
      "rewritten": "print(landslides['date'].head())\n"
    },
    {
      "raw": "# check the data type of our date column\nlandslides['date'].dtype",
      "rewrite-ns": 357264,
      "overhead-ns": 357264,
      "exec-ns": 1338696,
      "total-ns": 1695960,
      "patts-hit": {},
      "rewritten": "landslides['date'].dtype\n"
    },
    {
      "raw": "# Your turn! Check the data type of the Date column in the earthquakes dataframe\n# (note the capital 'D' in date!)\nprint(\"Data Type of Date column in Earthquakes data:\",earthquakes['Date'].dtype)\n",
      "rewrite-ns": 528855,
      "overhead-ns": 528855,
      "exec-ns": 402299,
      "total-ns": 931154,
      "patts-hit": {},
      "rewritten": "print('Data Type of Date column in Earthquakes data:', earthquakes['Date'].\n    dtype)\n"
    },
    {
      "raw": "# create a new column, date_parsed, with the parsed dates\nlandslides['date_parsed'] = pd.to_datetime(landslides['date'], format = \"%m/%d/%y\")",
      "rewrite-ns": 708600,
      "overhead-ns": 708600,
      "exec-ns": 55309457,
      "total-ns": 56018057,
      "patts-hit": {},
      "rewritten": "landslides['date_parsed'] = pd.to_datetime(landslides['date'], format=\n    '%m/%d/%y')\n"
    },
    {
      "raw": "# print the first few rows\nlandslides['date_parsed'].head()",
      "rewrite-ns": 446723,
      "overhead-ns": 446723,
      "exec-ns": 1184193,
      "total-ns": 1630916,
      "patts-hit": {},
      "rewritten": "landslides['date_parsed'].head()\n"
    },
    {
      "raw": "# Your turn! Create a new column, date_parsed, in the earthquakes\n# dataset that has correctly parsed dates in it. (Don't forget to \n# double-check that the dtype is correct!)\n# ALEX: make notebook run\n# earthquakes['Date']=pd.to_datetime(earthquakes['Date'],infer_datetime_format=True)\nearthquakes['Date']=pd.to_datetime(earthquakes['Date'],infer_datetime_format=True,utc=True)\nprint(earthquakes['Date'].dtype)\n",
      "rewrite-ns": 1162900,
      "overhead-ns": 1162900,
      "exec-ns": 1969495648,
      "total-ns": 1970658548,
      "patts-hit": {},
      "rewritten": "earthquakes['Date'] = pd.to_datetime(earthquakes['Date'],\n    infer_datetime_format=True, utc=True)\nprint(earthquakes['Date'].dtype)\n"
    },
    {
      "raw": "# try to get the day of the month from the date column\n# ALEX: the first of the two lines below was added to get the notebook to run\nlandslides['date'] = pd.to_datetime(landslides['date'], infer_datetime_format=True)\nday_of_month_landslides = landslides['date'].dt.day",
      "rewrite-ns": 1108288,
      "overhead-ns": 1108288,
      "exec-ns": 182317301,
      "total-ns": 183425589,
      "patts-hit": {},
      "rewritten": "landslides['date'] = pd.to_datetime(landslides['date'],\n    infer_datetime_format=True)\nday_of_month_landslides = landslides['date'].dt.day\n"
    },
    {
      "raw": "# get the day of the month from the date_parsed column\nday_of_month_landslides = landslides['date_parsed'].dt.day",
      "rewrite-ns": 464879,
      "overhead-ns": 464879,
      "exec-ns": 22057374,
      "total-ns": 22522253,
      "patts-hit": {},
      "rewritten": "day_of_month_landslides = landslides['date_parsed'].dt.day\n"
    },
    {
      "raw": "# Your turn! get the day of the month from the date_parsed column\nday_of_month_earthquakes=earthquakes['Date'].dt.day\nprint(day_of_month_earthquakes[:10])\n",
      "rewrite-ns": 823026,
      "overhead-ns": 823026,
      "exec-ns": 288294165,
      "total-ns": 289117191,
      "patts-hit": {},
      "rewritten": "day_of_month_earthquakes = earthquakes['Date'].dt.day\nprint(day_of_month_earthquakes[:10])\n"
    },
    {
      "raw": "# remove na's\nday_of_month_landslides = day_of_month_landslides.dropna()\n\n# plot the day of the month\n# ALEX: remove plotting\n# sns.distplot(day_of_month_landslides, kde=False, bins=31)",
      "rewrite-ns": 394364,
      "overhead-ns": 394364,
      "exec-ns": 4051746,
      "total-ns": 4446110,
      "patts-hit": {},
      "rewritten": "day_of_month_landslides = day_of_month_landslides.dropna()\n"
    },
    {
      "raw": "# Your turn! Plot the days of the month from your\n# earthquake dataset and make sure they make sense.\n# remove na's\nday_of_month_earthquakes = day_of_month_earthquakes.dropna()\n\n# plot the day of the month\n# ALEX: remove plotting\n# sns.distplot(day_of_month_earthquakes, kde=False, bins=31)\n",
      "rewrite-ns": 375666,
      "overhead-ns": 375666,
      "exec-ns": 7628581,
      "total-ns": 8004247,
      "patts-hit": {},
      "rewritten": "day_of_month_earthquakes = day_of_month_earthquakes.dropna()\n"
    },
    {
      "raw": "volcanos['Last Known Eruption'].sample(5)",
      "rewrite-ns": 468153,
      "overhead-ns": 468153,
      "exec-ns": 14452593,
      "total-ns": 14920746,
      "patts-hit": {},
      "rewritten": "volcanos['Last Known Eruption'].sample(5)\n"
    }
  ],
  "total-time-in-sec": 22.43275858,
  "max-disk-in-mb": 0
}