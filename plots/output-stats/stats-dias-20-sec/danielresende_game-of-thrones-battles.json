{
  "max-mem-in-mb": 841,
  "max-mem-in-mb2": 1923,
  "cells": [
    {
      "raw": "import numpy as np\n# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\n# ALEX: remove plotting\n# import matplotlib.pyplot as plt\n\n# %matplotlib inline\n\n# plt.rcParams['figure.figsize'] = (10, 6)\n# plt.style.use('ggplot')",
      "rewrite-ns": 690394,
      "overhead-ns": 690394,
      "exec-ns": 399321,
      "total-ns": 1089715,
      "patts-hit": {},
      "rewritten": "import numpy as np\nexec(os.environ['IREWR_IMPORTS'])\n"
    },
    {
      "raw": "battles = pd.read_csv('./input/battles.scaled.csv')\n\n'''\nthere is an error on the data\non the Battle of Castle Black, it was Mance Rayder the attacker, not Stannis Baratheon\n'''\n# ALEX: make notebook run\n# battles.set_value(27, 'attacker_king', 'Mance Rayder')\n# battles.set_value(27, 'defender_king', 'Stannis Baratheon')\nbattles.at[27, 'attacker_king'] = 'Mance Rayder'\nbattles.at[27, 'defender_king'] = 'Stannis Baratheon'\n\nprint(battles.info())",
      "rewrite-ns": 2065054,
      "overhead-ns": 2065054,
      "exec-ns": 4904523879,
      "total-ns": 4906588933,
      "patts-hit": {},
      "rewritten": "battles = pd.read_csv('./input/battles.scaled.csv')\n\"\"\"\nthere is an error on the data\non the Battle of Castle Black, it was Mance Rayder the attacker, not Stannis Baratheon\n\"\"\"\nbattles.at[27, 'attacker_king'] = 'Mance Rayder'\nbattles.at[27, 'defender_king'] = 'Stannis Baratheon'\nprint(battles.info())\n"
    },
    {
      "raw": "battles.head(5)",
      "rewrite-ns": 171981,
      "overhead-ns": 171981,
      "exec-ns": 16201467,
      "total-ns": 16373448,
      "patts-hit": {},
      "rewritten": "battles.head(5)\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# battles.groupby(['attacker_king', 'defender_king']).count()['name'].plot(kind = 'barh')\nbattles.groupby(['attacker_king', 'defender_king']).count()['name']",
      "rewrite-ns": 624137,
      "overhead-ns": 624137,
      "exec-ns": 3234852561,
      "total-ns": 3235476698,
      "patts-hit": {},
      "rewritten": "battles.groupby(['attacker_king', 'defender_king']).count()['name']\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# battles.groupby(['attacker_king','attacker_outcome']).count()['name'].unstack().plot(kind = 'barh')\nbattles.groupby(['attacker_king','attacker_outcome']).count()['name'].unstack()",
      "rewrite-ns": 803774,
      "overhead-ns": 803774,
      "exec-ns": 3246054523,
      "total-ns": 3246858297,
      "patts-hit": {},
      "rewritten": "battles.groupby(['attacker_king', 'attacker_outcome']).count()['name'].unstack(\n    )\n"
    },
    {
      "raw": "def commander_battles(attack, defend):\n    namesdict = {}\n    for i in range(len(attack.index)):\n        for name in attack.index[i].split(', '):\n            if name in namesdict:\n# ALEX: make notebook run\n#                 namesdict[name] = namesdict[name] + attack.ix[i]\n                namesdict[name] = namesdict[name] + attack.iloc[i]\n            else:\n# ALEX: make notebook run\n#                 namesdict[name] = attack.ix[i]\n                namesdict[name] = attack.iloc[i]\n    for i in range(len(defend.index)):\n        for name in defend.index[i].split(', '):\n            if name in namesdict:\n# ALEX: make notebook run\n#                 namesdict[name] = namesdict[name] + defend.ix[i]\n                namesdict[name] = namesdict[name] + defend.iloc[i]\n            else:\n# ALEX: make notebook run\n#                 namesdict[name] = defend.ix[i]\n                namesdict[name] = defend.iloc[i]\n    return namesdict\n\ncommander_exp = commander_battles(battles.groupby('attacker_commander').count()['name'], battles.groupby('defender_commander').count()['name'])\ncommander_exp = pd.DataFrame.from_dict(commander_exp, 'index')\ncommander_exp.rename(columns = {0:'num_battles'}, inplace = True)\n# ALEX: remove plotting\n# commander_exp.sort_values('num_battles').tail(15).plot(kind = 'barh')\ncommander_exp.sort_values('num_battles').tail(15)",
      "rewrite-ns": 6688914,
      "overhead-ns": 6688914,
      "exec-ns": 6750909277,
      "total-ns": 6757598191,
      "patts-hit": {},
      "rewritten": "def commander_battles(attack, defend):\n    namesdict = {}\n    for i in range(len(attack.index)):\n        for name in attack.index[i].split(', '):\n            if name in namesdict:\n                namesdict[name] = namesdict[name] + attack.iloc[i]\n            else:\n                namesdict[name] = attack.iloc[i]\n    for i in range(len(defend.index)):\n        for name in defend.index[i].split(', '):\n            if name in namesdict:\n                namesdict[name] = namesdict[name] + defend.iloc[i]\n            else:\n                namesdict[name] = defend.iloc[i]\n    return namesdict\ncommander_exp = commander_battles(battles.groupby('attacker_commander').\n    count()['name'], battles.groupby('defender_commander').count()['name'])\ncommander_exp = pd.DataFrame.from_dict(commander_exp, 'index')\ncommander_exp.rename(columns={(0): 'num_battles'}, inplace=True)\ncommander_exp.sort_values('num_battles').tail(15)\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# battles.groupby(['attacker_king', 'battle_type']).count()['name'].unstack().plot(kind = 'barh')\nbattles.groupby(['attacker_king', 'battle_type']).count()['name'].unstack()",
      "rewrite-ns": 854511,
      "overhead-ns": 854511,
      "exec-ns": 3331775581,
      "total-ns": 3332630092,
      "patts-hit": {},
      "rewritten": "battles.groupby(['attacker_king', 'battle_type']).count()['name'].unstack()\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# ax = battles[battles['attacker_outcome'] == 'win'].plot(kind = 'scatter', y = 'attacker_size', x = 'defender_size', label = 'win', s=100)\n# battles[battles['attacker_outcome'] == 'loss'].plot(kind = 'scatter', y = 'attacker_size', x = 'defender_size', label = 'loss', color = 'r', s=100, ax = ax)\nbattles[battles['attacker_outcome'] == 'win']\nbattles[battles['attacker_outcome'] == 'loss']",
      "rewrite-ns": 956572,
      "overhead-ns": 956572,
      "exec-ns": 603013887,
      "total-ns": 603970459,
      "patts-hit": {},
      "rewritten": "battles[battles['attacker_outcome'] == 'win']\nbattles[battles['attacker_outcome'] == 'loss']\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# battles.groupby(['region']).count()['name'].sort_values().plot(kind = 'barh')\nbattles.groupby(['region']).count()['name'].sort_values()",
      "rewrite-ns": 719800,
      "overhead-ns": 719800,
      "exec-ns": 3286340459,
      "total-ns": 3287060259,
      "patts-hit": {},
      "rewritten": "battles.groupby(['region']).count()['name'].sort_values()\n"
    },
    {
      "raw": "",
      "rewrite-ns": 37945,
      "overhead-ns": 37945,
      "exec-ns": 170930,
      "total-ns": 208875,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 25.387854967,
  "max-disk-in-mb": 0
}