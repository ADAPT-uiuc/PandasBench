{
  "max-mem-in-mb": 4724,
  "max-mem-in-mb2": 7391,
  "cells": [
    {
      "raw": "# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n# ALEX: remove plotting\n# import matplotlib.pyplot as plt\n# import seaborn as sns\n# %matplotlib inline",
      "rewrite-ns": 689400,
      "overhead-ns": 689400,
      "exec-ns": 391552,
      "total-ns": 1080952,
      "patts-hit": {},
      "rewritten": "exec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n"
    },
    {
      "raw": "# The original dataset\ndf = pd.read_csv(\"./input/UK_Traffic_Accidents_2015.scaled.csv\")\ndf.head()",
      "rewrite-ns": 584361,
      "overhead-ns": 584361,
      "exec-ns": 11841081204,
      "total-ns": 11841665565,
      "patts-hit": {},
      "rewritten": "df = pd.read_csv('./input/UK_Traffic_Accidents_2015.scaled.csv')\ndf.head()\n"
    },
    {
      "raw": "df = pd.read_csv(\"./input/UK_Traffic_Accidents_2015.scaled.csv\", usecols=[\"Day_of_Week\", \"Time\"])\ndf.dropna(inplace=True)\ndf.head()",
      "rewrite-ns": 1036306,
      "overhead-ns": 1036306,
      "exec-ns": 4305874228,
      "total-ns": 4306910534,
      "patts-hit": {},
      "rewritten": "df = pd.read_csv('./input/UK_Traffic_Accidents_2015.scaled.csv', usecols=[\n    'Day_of_Week', 'Time'])\ndf.dropna(inplace=True)\ndf.head()\n"
    },
    {
      "raw": "df['Time'] = df['Time'].map(lambda x: str(x)[:-3])\ndf.head()",
      "rewrite-ns": 1113906,
      "overhead-ns": 1113906,
      "exec-ns": 1291426753,
      "total-ns": 1292540659,
      "patts-hit": {},
      "rewritten": "df['Time'] = df['Time'].map(lambda x: str(x)[:-3])\ndf.head()\n"
    },
    {
      "raw": "# Convert \"Day_of_Week\" to string\ndf[\"Day_of_Week\"] = df[\"Day_of_Week\"].astype(str)",
      "rewrite-ns": 635881,
      "overhead-ns": 635881,
      "exec-ns": 1732666768,
      "total-ns": 1733302649,
      "patts-hit": {},
      "rewritten": "df['Day_of_Week'] = df['Day_of_Week'].astype(str)\n"
    },
    {
      "raw": "# Adding column for ordering the days of the week\ndf['Day'] = df[\"Day_of_Week\"]\ndf.head()",
      "rewrite-ns": 514298,
      "overhead-ns": 514298,
      "exec-ns": 165876959,
      "total-ns": 166391257,
      "patts-hit": {},
      "rewritten": "df['Day'] = df['Day_of_Week']\ndf.head()\n"
    },
    {
      "raw": "df[\"Day_of_Week\"] = df[\"Day_of_Week\"].replace(\"1\", \"Sunday\")\ndf[\"Day_of_Week\"] = df[\"Day_of_Week\"].replace(\"2\", \"Monday\")\ndf[\"Day_of_Week\"] = df[\"Day_of_Week\"].replace(\"3\", \"Tuesday\")\ndf[\"Day_of_Week\"] = df[\"Day_of_Week\"].replace(\"4\", \"Wednesday\")\ndf[\"Day_of_Week\"] = df[\"Day_of_Week\"].replace(\"5\", \"Thursday\")\ndf[\"Day_of_Week\"] = df[\"Day_of_Week\"].replace(\"6\", \"Friday\")\ndf[\"Day_of_Week\"] = df[\"Day_of_Week\"].replace(\"7\", \"Saturday\")\n\ndf.head()",
      "rewrite-ns": 1150802,
      "overhead-ns": 1150802,
      "exec-ns": 1874846389,
      "total-ns": 1875997191,
      "patts-hit": {},
      "rewritten": "df['Day_of_Week'] = df['Day_of_Week'].replace('1', 'Sunday')\ndf['Day_of_Week'] = df['Day_of_Week'].replace('2', 'Monday')\ndf['Day_of_Week'] = df['Day_of_Week'].replace('3', 'Tuesday')\ndf['Day_of_Week'] = df['Day_of_Week'].replace('4', 'Wednesday')\ndf['Day_of_Week'] = df['Day_of_Week'].replace('5', 'Thursday')\ndf['Day_of_Week'] = df['Day_of_Week'].replace('6', 'Friday')\ndf['Day_of_Week'] = df['Day_of_Week'].replace('7', 'Saturday')\ndf.head()\n"
    },
    {
      "raw": "# Using .ctrosstab() to create a pivot table\ndf_pivot = pd.crosstab(df[\"Day_of_Week\"], df[\"Time\"])\ndf_pivot",
      "rewrite-ns": 701370,
      "overhead-ns": 701370,
      "exec-ns": 1032048672,
      "total-ns": 1032750042,
      "patts-hit": {},
      "rewritten": "df_pivot = pd.crosstab(df['Day_of_Week'], df['Time'])\ndf_pivot\n"
    },
    {
      "raw": "# Making the index chronological\ndf_pivot = df_pivot.reindex([\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"])\ndf_pivot",
      "rewrite-ns": 745635,
      "overhead-ns": 745635,
      "exec-ns": 57919300,
      "total-ns": 58664935,
      "patts-hit": {},
      "rewritten": "df_pivot = df_pivot.reindex(['Monday', 'Tuesday', 'Wednesday', 'Thursday',\n    'Friday', 'Saturday', 'Sunday'])\ndf_pivot\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# fig, ax = plt.subplots(figsize=(30,8))\n# graph = sns.heatmap(df_pivot, cmap=\"Blues\", linecolor=\"white\", linewidths=0.1)\n\n# ax.set_title(\"Number of traffic-related deaths per day & hour combination\", y=1.3, fontsize=30, fontweight=\"bold\")\n# ax.set_xlabel(\"\")\n# ax.set_ylabel(\"\")\n\n# #from matplotlib import rcParams\n# #rcParams['axes.titlepad'] = 130 # Space between the title and graph\n\n# locs, labels = plt.yticks() # Rotating row labels\n# plt.setp(labels, rotation=0) # Rotating row labels\n\n# ax.xaxis.tick_top() # x axis on top\n# ax.xaxis.set_label_position('top') # x axis on top\n\n# graph.tick_params(axis='both',labelsize=15) # Tick label size\n# graph",
      "rewrite-ns": 26085,
      "overhead-ns": 26085,
      "exec-ns": 117210,
      "total-ns": 143295,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 22.309447079,
  "max-disk-in-mb": 0
}