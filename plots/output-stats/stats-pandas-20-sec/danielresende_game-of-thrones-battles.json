{
  "max-mem-in-mb": 900,
  "max-mem-in-mb2": 1935,
  "cells": [
    {
      "raw": "import numpy as np\n# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\n# FIRST-AUTHOR: remove plotting\n# import matplotlib.pyplot as plt\n\n# %matplotlib inline\n\n# plt.rcParams['figure.figsize'] = (10, 6)\n# plt.style.use('ggplot')",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 263897
    },
    {
      "raw": "battles = pd.read_csv('./input/battles.scaled.csv')\n\n'''\nthere is an error on the data\non the Battle of Castle Black, it was Mance Rayder the attacker, not Stannis Baratheon\n'''\n# FIRST-AUTHOR: make notebook run\n# battles.set_value(27, 'attacker_king', 'Mance Rayder')\n# battles.set_value(27, 'defender_king', 'Stannis Baratheon')\nbattles.at[27, 'attacker_king'] = 'Mance Rayder'\nbattles.at[27, 'defender_king'] = 'Stannis Baratheon'\n\nprint(battles.info())",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 4469639393
    },
    {
      "raw": "battles.head(5)",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 421983
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# battles.groupby(['attacker_king', 'defender_king']).count()['name'].plot(kind = 'barh')\nbattles.groupby(['attacker_king', 'defender_king']).count()['name']",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3237465550
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# battles.groupby(['attacker_king','attacker_outcome']).count()['name'].unstack().plot(kind = 'barh')\nbattles.groupby(['attacker_king','attacker_outcome']).count()['name'].unstack()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3223009397
    },
    {
      "raw": "def commander_battles(attack, defend):\n    namesdict = {}\n    for i in range(len(attack.index)):\n        for name in attack.index[i].split(', '):\n            if name in namesdict:\n# FIRST-AUTHOR: make notebook run\n#                 namesdict[name] = namesdict[name] + attack.ix[i]\n                namesdict[name] = namesdict[name] + attack.iloc[i]\n            else:\n# FIRST-AUTHOR: make notebook run\n#                 namesdict[name] = attack.ix[i]\n                namesdict[name] = attack.iloc[i]\n    for i in range(len(defend.index)):\n        for name in defend.index[i].split(', '):\n            if name in namesdict:\n# FIRST-AUTHOR: make notebook run\n#                 namesdict[name] = namesdict[name] + defend.ix[i]\n                namesdict[name] = namesdict[name] + defend.iloc[i]\n            else:\n# FIRST-AUTHOR: make notebook run\n#                 namesdict[name] = defend.ix[i]\n                namesdict[name] = defend.iloc[i]\n    return namesdict\n\ncommander_exp = commander_battles(battles.groupby('attacker_commander').count()['name'], battles.groupby('defender_commander').count()['name'])\ncommander_exp = pd.DataFrame.from_dict(commander_exp, 'index')\ncommander_exp.rename(columns = {0:'num_battles'}, inplace = True)\n# FIRST-AUTHOR: remove plotting\n# commander_exp.sort_values('num_battles').tail(15).plot(kind = 'barh')\ncommander_exp.sort_values('num_battles').tail(15)",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 6733512033
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# battles.groupby(['attacker_king', 'battle_type']).count()['name'].unstack().plot(kind = 'barh')\nbattles.groupby(['attacker_king', 'battle_type']).count()['name'].unstack()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3252328525
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# ax = battles[battles['attacker_outcome'] == 'win'].plot(kind = 'scatter', y = 'attacker_size', x = 'defender_size', label = 'win', s=100)\n# battles[battles['attacker_outcome'] == 'loss'].plot(kind = 'scatter', y = 'attacker_size', x = 'defender_size', label = 'loss', color = 'r', s=100, ax = ax)\nbattles[battles['attacker_outcome'] == 'win']\nbattles[battles['attacker_outcome'] == 'loss']",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 595009445
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# battles.groupby(['region']).count()['name'].sort_values().plot(kind = 'barh')\nbattles.groupby(['region']).count()['name'].sort_values()",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 3290922727
    },
    {
      "raw": "",
      "external_calls": {},
      "all_calls": {},
      "total-ns": 150531
    }
  ],
  "total-time-in-sec": 24.802723481,
  "max-disk-in-mb": 0
}