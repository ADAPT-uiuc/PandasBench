{
  "max-mem-in-mb": 110,
  "max-mem-in-mb2": 114,
  "cells": [
    {
      "raw": "# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nexec(os.environ['IREWR_IMPORTS'])\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n# FIRST-AUTHOR: remove path printing\n# from subprocess import check_output\n# print(check_output([\"ls\", \"../input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.\n# FIRST-AUTHOR: make notebook work with runner\nfrom IPython.display import display",
      "rewrite-ns": 792584,
      "overhead-ns": 792584,
      "exec-ns": 455169,
      "total-ns": 1247753,
      "patts-hit": {},
      "rewritten": "import numpy as np\nexec(os.environ['IREWR_IMPORTS'])\nfrom IPython.display import display\n"
    },
    {
      "raw": "trainData = pd.read_csv(\"./input/train.scaled.csv\")\ntestData = pd.read_csv(\"./input/test.scaled.csv\")",
      "rewrite-ns": 915802,
      "overhead-ns": 915802,
      "exec-ns": 7142669,
      "total-ns": 8058471,
      "patts-hit": {},
      "rewritten": "trainData = pd.read_csv('./input/train.scaled.csv')\ntestData = pd.read_csv('./input/test.scaled.csv')\n"
    },
    {
      "raw": "trainData.Sex = trainData.Sex.astype('category')\ntestData.Sex = testData.Sex.astype('category')\ntrainData['IsMale'] = trainData.Sex.cat.codes\ntestData['IsMale'] = testData.Sex.cat.codes",
      "rewrite-ns": 2205327,
      "overhead-ns": 2205327,
      "exec-ns": 3194179,
      "total-ns": 5399506,
      "patts-hit": {},
      "rewritten": "trainData.Sex = trainData.Sex.astype('category')\ntestData.Sex = testData.Sex.astype('category')\ntrainData['IsMale'] = trainData.Sex.cat.codes\ntestData['IsMale'] = testData.Sex.cat.codes\n"
    },
    {
      "raw": "trainData.head(n=20)",
      "rewrite-ns": 159771,
      "overhead-ns": 159771,
      "exec-ns": 14055398,
      "total-ns": 14215169,
      "patts-hit": {},
      "rewritten": "trainData.head(n=20)\n"
    },
    {
      "raw": "display(trainData.describe().round(2))\ndisplay(trainData.describe(include=[\"O\"]))",
      "rewrite-ns": 1275710,
      "overhead-ns": 1275710,
      "exec-ns": 33583435,
      "total-ns": 34859145,
      "patts-hit": {},
      "rewritten": "display(trainData.describe().round(2))\ndisplay(trainData.describe(include=['O']))\n"
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# import matplotlib.pyplot as plt\n# trainData.Sex.value_counts(normalize=True).plot(kind=\"bar\", title=\"Sex\")\n# plt.show()\n# trainData.Pclass.value_counts().plot(kind=\"barh\", title=\"Pclass\")\n# plt.show()\n# trainData.Fare.plot(kind=\"density\", title=\"Fare\", xlim=(0,800))\n# plt.show()\ntrainData.Sex.value_counts(normalize=True)\ntrainData.Pclass.value_counts()\ntrainData.Fare",
      "rewrite-ns": 931909,
      "overhead-ns": 931909,
      "exec-ns": 2714941,
      "total-ns": 3646850,
      "patts-hit": {},
      "rewritten": "trainData.Sex.value_counts(normalize=True)\ntrainData.Pclass.value_counts()\ntrainData.Fare\n"
    },
    {
      "raw": "trainData.groupby([\"Sex\", \"Survived\"])[\"Survived\"].count()",
      "rewrite-ns": 833547,
      "overhead-ns": 833547,
      "exec-ns": 3406751,
      "total-ns": 4240298,
      "patts-hit": {},
      "rewritten": "trainData.groupby(['Sex', 'Survived'])['Survived'].count()\n"
    },
    {
      "raw": "trainData[[\"PassengerId\",\"Survived\", \"Pclass\", \"Age\", \"SibSp\", \"Parch\", \"Fare\", \"IsMale\"]].corrwith(trainData.Survived).round(4) * 100",
      "rewrite-ns": 1412620,
      "overhead-ns": 1416155,
      "exec-ns": 4390034,
      "total-ns": 5802654,
      "patts-hit": {},
      "rewritten": "trainData[['PassengerId', 'Survived', 'Pclass', 'Age', 'SibSp', 'Parch',\n    'Fare', 'IsMale']].corrwith(trainData.Survived).round(4) * 100\n"
    },
    {
      "raw": "testFeatures = [\"IsMale\", \"Pclass\", \"Fare\"]\n# FIRST-AUTHOR: make notebook run\n# X = trainData[testFeatures].fillna(0).as_matrix()\n# Y = trainData[\"Survived\"].fillna(0).as_matrix()\nX = trainData[testFeatures].fillna(0).to_numpy()\nY = trainData[\"Survived\"].fillna(0).to_numpy()",
      "rewrite-ns": 1860974,
      "overhead-ns": 1860974,
      "exec-ns": 1465081,
      "total-ns": 3326055,
      "patts-hit": {},
      "rewritten": "testFeatures = ['IsMale', 'Pclass', 'Fare']\nX = trainData[testFeatures].fillna(0).to_numpy()\nY = trainData['Survived'].fillna(0).to_numpy()\n"
    },
    {
      "raw": "# FIRST-AUTHOR: remove ML code\n# from sklearn import tree\n# dtree = tree.DecisionTreeClassifier(max_depth=3)\n# dtree.fit(X, Y) #ALL OF THE MAGIC HAPPENS RIGHT HERE LADIES AND GENTLEMEN AND OTHERS",
      "rewrite-ns": 21542,
      "overhead-ns": 21542,
      "exec-ns": 107008,
      "total-ns": 128550,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# FIRST-AUTHOR: remove ML code\n# import graphviz\n# dot_data = tree.export_graphviz(dtree, out_file=None, feature_names=testFeatures)\n# graph = graphviz.Source(dot_data)\n# graph",
      "rewrite-ns": 19581,
      "overhead-ns": 19581,
      "exec-ns": 98350,
      "total-ns": 117931,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# FIRST-AUTHOR: remove ML code, make notebook run\n# testData[\"Survived\"] = dtree.predict(testData[testFeatures].fillna(0).as_matrix())\ntestData[\"Survived\"] = testData[testFeatures].fillna(0).to_numpy()[:,1]",
      "rewrite-ns": 1148652,
      "overhead-ns": 1148652,
      "exec-ns": 1555523,
      "total-ns": 2704175,
      "patts-hit": {},
      "rewritten": "testData['Survived'] = testData[testFeatures].fillna(0).to_numpy()[:, 1]\n"
    },
    {
      "raw": "predictions = testData[[\"PassengerId\", \"Survived\"]]\npredictions.to_csv(\"dtree_predictions.csv\", index=False)\n# FIRST-AUTHOR: remove path printing\n# print(check_output([\"ls\", \".\"]).decode(\"utf8\"))",
      "rewrite-ns": 1003240,
      "overhead-ns": 1003240,
      "exec-ns": 3009320,
      "total-ns": 4012560,
      "patts-hit": {},
      "rewritten": "predictions = testData[['PassengerId', 'Survived']]\npredictions.to_csv('dtree_predictions.csv', index=False)\n"
    },
    {
      "raw": "",
      "rewrite-ns": 20503,
      "overhead-ns": 20503,
      "exec-ns": 108656,
      "total-ns": 129159,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 0.087888276,
  "max-disk-in-mb": 0
}