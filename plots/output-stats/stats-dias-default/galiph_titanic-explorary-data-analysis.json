{
  "max-mem-in-mb": 111,
  "max-mem-in-mb2": 115,
  "cells": [
    {
      "raw": "# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n# FIRST-AUTHOR: remove plotting\n# import seaborn as sns\n# import matplotlib.pyplot as plt",
      "rewrite-ns": 691909,
      "overhead-ns": 691909,
      "exec-ns": 416641,
      "total-ns": 1108550,
      "patts-hit": {},
      "rewritten": "exec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n"
    },
    {
      "raw": "# FIRST-AUTHOR: remove ML code\n# from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n# from sklearn.linear_model import LogisticRegression\n# from sklearn.model_selection import train_test_split\n# from sklearn.preprocessing import StandardScaler\n# from sklearn.neighbors import KNeighborsClassifier\n# from sklearn.pipeline import Pipeline\n# from sklearn.svm import SVC",
      "rewrite-ns": 24354,
      "overhead-ns": 24354,
      "exec-ns": 119366,
      "total-ns": 143720,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "titanic = pd.read_csv('./input/train.scaled.csv')",
      "rewrite-ns": 531613,
      "overhead-ns": 531613,
      "exec-ns": 4727616,
      "total-ns": 5259229,
      "patts-hit": {},
      "rewritten": "titanic = pd.read_csv('./input/train.scaled.csv')\n"
    },
    {
      "raw": "titanic[['Age']].describe()",
      "rewrite-ns": 673378,
      "overhead-ns": 673378,
      "exec-ns": 8361650,
      "total-ns": 9035028,
      "patts-hit": {},
      "rewritten": "titanic[['Age']].describe()\n"
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# sns.heatmap(titanic.isnull(),yticklabels=False,cbar=False,cmap='viridis')\n# plt.show()\n_ = titanic.isnull()",
      "rewrite-ns": 472254,
      "overhead-ns": 472254,
      "exec-ns": 951696,
      "total-ns": 1423950,
      "patts-hit": {},
      "rewritten": "_ = titanic.isnull()\n"
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# sns.countplot(x='Survived',data=titanic,palette='RdBu_r');",
      "rewrite-ns": 22263,
      "overhead-ns": 22263,
      "exec-ns": 109807,
      "total-ns": 132070,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# sns.countplot(x='Survived',hue='Sex',data=titanic,palette='RdBu_r');",
      "rewrite-ns": 19327,
      "overhead-ns": 19327,
      "exec-ns": 103905,
      "total-ns": 123232,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# sns.countplot(x='Survived',hue='Pclass',data=titanic,palette='viridis');",
      "rewrite-ns": 18332,
      "overhead-ns": 18332,
      "exec-ns": 97991,
      "total-ns": 116323,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# sns.countplot(x='Pclass',hue='Survived',data=titanic,palette='viridis');",
      "rewrite-ns": 18097,
      "overhead-ns": 18097,
      "exec-ns": 94233,
      "total-ns": 112330,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# titanic[titanic.Survived == 0].hist(\"Age\", bins=20)\n# plt.show()\ntitanic[titanic.Survived == 0]",
      "rewrite-ns": 598546,
      "overhead-ns": 598546,
      "exec-ns": 13649316,
      "total-ns": 14247862,
      "patts-hit": {},
      "rewritten": "titanic[titanic.Survived == 0]\n"
    },
    {
      "raw": "titanic.Age = titanic.groupby('Pclass').Age.transform(lambda x: x.fillna(np.round(x.mean())))",
      "rewrite-ns": 1594021,
      "overhead-ns": 1594021,
      "exec-ns": 4031117,
      "total-ns": 5625138,
      "patts-hit": {},
      "rewritten": "titanic.Age = titanic.groupby('Pclass').Age.transform(lambda x: x.fillna(np\n    .round(x.mean())))\n"
    },
    {
      "raw": "# Extract titles from name\ntitanic['Title']=0\nfor i in titanic:\n    titanic['Title']=titanic['Name'].str.extract('([A-Za-z]+)\\.', expand=False)  # Use REGEX to define a search pattern",
      "rewrite-ns": 1452029,
      "overhead-ns": 1452029,
      "exec-ns": 17263205,
      "total-ns": 18715234,
      "patts-hit": {},
      "rewritten": "titanic['Title'] = 0\nfor i in titanic:\n    titanic['Title'] = titanic['Name'].str.extract('([A-Za-z]+)\\\\.', expand\n        =False)\n"
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# plt.figure(figsize=(15,5))\n# sns.barplot(x=titanic['Title'], y=titanic['Age']);\n# plt.show()\n_ = titanic['Title']\n_ = titanic['Age']",
      "rewrite-ns": 754667,
      "overhead-ns": 754667,
      "exec-ns": 455062,
      "total-ns": 1209729,
      "patts-hit": {},
      "rewritten": "_ = titanic['Title']\n_ = titanic['Age']\n"
    },
    {
      "raw": "titanic_melted = pd.melt(titanic[['Survived', 'Age']], \"Survived\", var_name=\"Ages\")",
      "rewrite-ns": 942025,
      "overhead-ns": 942025,
      "exec-ns": 2583230,
      "total-ns": 3525255,
      "patts-hit": {},
      "rewritten": "titanic_melted = pd.melt(titanic[['Survived', 'Age']], 'Survived', var_name\n    ='Ages')\n"
    },
    {
      "raw": "titanic_melted.head()",
      "rewrite-ns": 120940,
      "overhead-ns": 120940,
      "exec-ns": 4498041,
      "total-ns": 4618981,
      "patts-hit": {},
      "rewritten": "titanic_melted.head()\n"
    },
    {
      "raw": "# FIRST-AUTHOR: remove plotting\n# sns.swarmplot(x = 'Ages', y=\"value\", hue=\"Survived\", data=titanic_melted)\n# plt.show()",
      "rewrite-ns": 23383,
      "overhead-ns": 23383,
      "exec-ns": 113018,
      "total-ns": 136401,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "df = titanic.drop(['Name', 'Ticket', 'Cabin'], axis=1)",
      "rewrite-ns": 796099,
      "overhead-ns": 796099,
      "exec-ns": 960526,
      "total-ns": 1756625,
      "patts-hit": {},
      "rewritten": "df = titanic.drop(['Name', 'Ticket', 'Cabin'], axis=1)\n"
    },
    {
      "raw": "sex_conv = lambda x : 1 if x=='male' else 0 \ndf['Is_male'] = df['Sex'].apply(sex_conv)",
      "rewrite-ns": 1608005,
      "overhead-ns": 1608005,
      "exec-ns": 1364720,
      "total-ns": 2972725,
      "patts-hit": {},
      "rewritten": "sex_conv = lambda x: 1 if x == 'male' else 0\ndf['Is_male'] = df['Sex'].apply(sex_conv)\n"
    },
    {
      "raw": "df['Age'] =pd.cut(df['Age'], bins=[1, 12, 50, 200], labels=['Child','Adult','Elder'])",
      "rewrite-ns": 1379146,
      "overhead-ns": 1379146,
      "exec-ns": 1884041,
      "total-ns": 3263187,
      "patts-hit": {},
      "rewritten": "df['Age'] = pd.cut(df['Age'], bins=[1, 12, 50, 200], labels=['Child',\n    'Adult', 'Elder'])\n"
    },
    {
      "raw": "embarked_new = pd.get_dummies(df['Embarked'])\ntrain = pd.concat([df[['PassengerId','Survived','Pclass','Sex', \n                       'Age', 'SibSp', 'Parch', 'Fare','Embarked','Is_male']], embarked_new], axis=1)",
      "rewrite-ns": 1973684,
      "overhead-ns": 1973684,
      "exec-ns": 2657162,
      "total-ns": 4630846,
      "patts-hit": {},
      "rewritten": "embarked_new = pd.get_dummies(df['Embarked'])\ntrain = pd.concat([df[['PassengerId', 'Survived', 'Pclass', 'Sex', 'Age',\n    'SibSp', 'Parch', 'Fare', 'Embarked', 'Is_male']], embarked_new], axis=1)\n"
    },
    {
      "raw": "# Family size feature\ndf['FamilySize'] = df['SibSp'] + df['Parch']\ndf.drop('SibSp',axis=1,inplace=True)\ndf.drop('Parch',axis=1,inplace=True)\ndf.head()",
      "rewrite-ns": 1907930,
      "overhead-ns": 1907930,
      "exec-ns": 10998887,
      "total-ns": 12906817,
      "patts-hit": {},
      "rewritten": "df['FamilySize'] = df['SibSp'] + df['Parch']\ndf.drop('SibSp', axis=1, inplace=True)\ndf.drop('Parch', axis=1, inplace=True)\ndf.head()\n"
    },
    {
      "raw": "titanic = pd.read_csv('./input/train.scaled.csv')\ndf = titanic.drop(['Ticket', 'Cabin'], axis=1)\n\n#Converting Sex\nsex_conv = lambda x : 1 if x=='male' else 0 \ndf['Is_male'] = df['Sex'].apply(sex_conv)\n\n# Adding \"Title\" column\ndf['Title']=0\nfor i in df:\n    df['Title']=df['Name'].str.extract('([A-Za-z]+)\\.', expand=False)  \n\n# Imputing Age  \ndf['Age'] = df.groupby('Title')['Age'].transform(lambda x: x.fillna(np.round(x.mean())))\n\n# Converting Age\ndf['Age'] =pd.cut(df['Age'], bins=[1, 12, 50, 200], labels=['Child','Adult','Elder'])\n\n# Adding Family column\ndf['FamilySize'] = df['SibSp'] + df['Parch']\ndf.drop('SibSp',axis=1,inplace=True)\ndf.drop('Parch',axis=1,inplace=True)\n\n#Binilen limanlar\u0131 grupland\u0131rma\nembarked_new = pd.get_dummies(df['Embarked'])\n\ntrain = pd.concat([df[['Survived','Pclass', \n                       'FamilySize','Fare',\n                       'Is_male', 'Age']], embarked_new], axis=1)\n\nX = train[['Is_male','Pclass', 'Age', \"FamilySize\"]]\ny = train['Survived']",
      "rewrite-ns": 10365358,
      "overhead-ns": 10365358,
      "exec-ns": 33715028,
      "total-ns": 44080386,
      "patts-hit": {},
      "rewritten": "titanic = pd.read_csv('./input/train.scaled.csv')\ndf = titanic.drop(['Ticket', 'Cabin'], axis=1)\nsex_conv = lambda x: 1 if x == 'male' else 0\ndf['Is_male'] = df['Sex'].apply(sex_conv)\ndf['Title'] = 0\nfor i in df:\n    df['Title'] = df['Name'].str.extract('([A-Za-z]+)\\\\.', expand=False)\ndf['Age'] = df.groupby('Title')['Age'].transform(lambda x: x.fillna(np.\n    round(x.mean())))\ndf['Age'] = pd.cut(df['Age'], bins=[1, 12, 50, 200], labels=['Child',\n    'Adult', 'Elder'])\ndf['FamilySize'] = df['SibSp'] + df['Parch']\ndf.drop('SibSp', axis=1, inplace=True)\ndf.drop('Parch', axis=1, inplace=True)\nembarked_new = pd.get_dummies(df['Embarked'])\ntrain = pd.concat([df[['Survived', 'Pclass', 'FamilySize', 'Fare',\n    'Is_male', 'Age']], embarked_new], axis=1)\nX = train[['Is_male', 'Pclass', 'Age', 'FamilySize']]\ny = train['Survived']\n"
    },
    {
      "raw": "",
      "rewrite-ns": 21710,
      "overhead-ns": 21710,
      "exec-ns": 112960,
      "total-ns": 134670,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 0.135278288,
  "max-disk-in-mb": 0
}