{
  "max-mem-in-mb": 902,
  "max-mem-in-mb2": 1205,
  "cells": [
    {
      "raw": "#imports \n\n# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n# ALEX: remove plotting, ML code\n# import matplotlib.pyplot as plt\n# import seaborn as sns\n\n# from sklearn.linear_model import LogisticRegression\n# from sklearn.svm import SVC, LinearSVC\n# from sklearn.ensemble import RandomForestClassifier\n# from sklearn.neighbors import KNeighborsClassifier\n# from sklearn.naive_bayes import GaussianNB",
      "rewrite-ns": 689100,
      "overhead-ns": 689100,
      "exec-ns": 398017,
      "total-ns": 1087117,
      "patts-hit": {},
      "rewritten": "exec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n"
    },
    {
      "raw": "food_df = pd.read_csv(\"./input/en.openfoodfacts.org.products.scaled.tsv\", delimiter='\\t');\n#food_df = pd.read_csv(\"FoodFacts.csv\")\n\nfood_df.head()",
      "rewrite-ns": 709595,
      "overhead-ns": 709595,
      "exec-ns": 3863785732,
      "total-ns": 3864495327,
      "patts-hit": {},
      "rewritten": "food_df = pd.read_csv('./input/en.openfoodfacts.org.products.scaled.tsv',\n    delimiter='\\t')\nfood_df.head()\n"
    },
    {
      "raw": "food_df.info()",
      "rewrite-ns": 150940,
      "overhead-ns": 150940,
      "exec-ns": 6281397,
      "total-ns": 6432337,
      "patts-hit": {},
      "rewritten": "food_df.info()\n"
    },
    {
      "raw": "#split train/validate/test set\n\ntrain, validate, test = np.split(food_df.sample(frac=1), [int(.6*len(food_df)), int(.8*len(food_df))])\nprint(\"Train: %s\\nTest: %s\\nValidate: %s\" % (train.shape, test.shape, validate.shape))",
      "rewrite-ns": 2193296,
      "overhead-ns": 2193296,
      "exec-ns": 411597607,
      "total-ns": 413790903,
      "patts-hit": {},
      "rewritten": "train, validate, test = np.split(food_df.sample(frac=1), [int(0.6 * len(\n    food_df)), int(0.8 * len(food_df))])\nprint(\"\"\"Train: %s\nTest: %s\nValidate: %s\"\"\" % (train.shape, test.shape,\n    validate.shape))\n"
    },
    {
      "raw": "#still working on this so I wanted to practice with a small dataset\ndf = validate\na, b = np.split(df.sample(frac=1), [int(.1*len(df))])\na.shape",
      "rewrite-ns": 1312761,
      "overhead-ns": 1312761,
      "exec-ns": 81492982,
      "total-ns": 82805743,
      "patts-hit": {},
      "rewritten": "df = validate\na, b = np.split(df.sample(frac=1), [int(0.1 * len(df))])\na.shape\n"
    },
    {
      "raw": "a.head()",
      "rewrite-ns": 122380,
      "overhead-ns": 122380,
      "exec-ns": 38057109,
      "total-ns": 38179489,
      "patts-hit": {},
      "rewritten": "a.head()\n"
    },
    {
      "raw": "#clean data\n#remove from entry data that has empty values in the energy\na = a[~pd.isnull(a['energy_100g'])]\na.drop([\"code\", \"url\", \"creator\", \"created_t\", \"created_datetime\", \"last_modified_t\", \"last_modified_datetime\"], axis=1)\na.describe()",
      "rewrite-ns": 1331635,
      "overhead-ns": 1331635,
      "exec-ns": 152775766,
      "total-ns": 154107401,
      "patts-hit": {},
      "rewritten": "a = a[~pd.isnull(a['energy_100g'])]\na.drop(['code', 'url', 'creator', 'created_t', 'created_datetime',\n    'last_modified_t', 'last_modified_datetime'], axis=1)\na.describe()\n"
    },
    {
      "raw": "## analyze data \n# which features are available in the dataset? \nprint(a.columns.values)",
      "rewrite-ns": 383957,
      "overhead-ns": 383957,
      "exec-ns": 489138,
      "total-ns": 873095,
      "patts-hit": {},
      "rewritten": "print(a.columns.values)\n"
    },
    {
      "raw": "a.describe(exclude=['O'])",
      "rewrite-ns": 113873,
      "overhead-ns": 113873,
      "exec-ns": 147550087,
      "total-ns": 147663960,
      "patts-hit": {},
      "rewritten": "a.describe(exclude=['O'])\n"
    },
    {
      "raw": "#analyze data, get foods with only grades a, b, c, d, e\n#get only their carb/protein/fat as preliminary analysis\n\nonly_a = a.loc[a['nutrition_grade_fr'] == 'a']\nonly_b = a.loc[a['nutrition_grade_fr'] == 'b']\nonly_c = a.loc[a['nutrition_grade_fr'] == 'c']\nonly_d = a.loc[a['nutrition_grade_fr'] == 'd']\nonly_e = a.loc[a['nutrition_grade_fr'] == 'e']\n\nmac_only_a = only_a[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_b = only_b[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_c = only_c[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_d = only_d[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_e = only_e[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]",
      "rewrite-ns": 4224430,
      "overhead-ns": 4224430,
      "exec-ns": 5080998,
      "total-ns": 9305428,
      "patts-hit": {},
      "rewritten": "only_a = a.loc[a['nutrition_grade_fr'] == 'a']\nonly_b = a.loc[a['nutrition_grade_fr'] == 'b']\nonly_c = a.loc[a['nutrition_grade_fr'] == 'c']\nonly_d = a.loc[a['nutrition_grade_fr'] == 'd']\nonly_e = a.loc[a['nutrition_grade_fr'] == 'e']\nmac_only_a = only_a[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_b = only_b[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_c = only_c[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_d = only_d[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\nmac_only_e = only_e[['carbohydrates_100g', 'proteins_100g', 'fat_100g']]\n"
    },
    {
      "raw": "mac_only_a.describe()",
      "rewrite-ns": 79471,
      "overhead-ns": 79471,
      "exec-ns": 7394795,
      "total-ns": 7474266,
      "patts-hit": {},
      "rewritten": "mac_only_a.describe()\n"
    },
    {
      "raw": "# ALEX: remove plotting, get notebook to run\n# order = sorted(a.nutrition_grade_fr.unique()[1:])\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"fat_100g\", data=a, order=order)\n_ = a.nutrition_grade_fr.unique()[1:]",
      "rewrite-ns": 515998,
      "overhead-ns": 515998,
      "exec-ns": 330996,
      "total-ns": 846994,
      "patts-hit": {},
      "rewritten": "_ = a.nutrition_grade_fr.unique()[1:]\n"
    },
    {
      "raw": "#order = sorted(a.nutrition_grade_fr.unique()[1:])\n# ALEX: remove plotting\n# order = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"sugars_100g\", data=a, order=order)\n# sns.plt.title('Sugar vs Grade')",
      "rewrite-ns": 13133,
      "overhead-ns": 13133,
      "exec-ns": 65883,
      "total-ns": 79016,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# ALEX: remove plotting\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"sugars_100g\", data=a, order=order)\n# sns.plt.title('Fat vs Grade')\n",
      "rewrite-ns": 10907,
      "overhead-ns": 10907,
      "exec-ns": 58738,
      "total-ns": 69645,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# ALEX: remove plotting\n# ax = sns.boxplot(x=\"nutrition_grade_fr\", y=\"proteins_100g\", data=a, order=order)\n# sns.plt.title('Protein vs Grade')\n",
      "rewrite-ns": 10594,
      "overhead-ns": 10594,
      "exec-ns": 56631,
      "total-ns": 67225,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9481,
      "overhead-ns": 9481,
      "exec-ns": 56631,
      "total-ns": 66112,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9340,
      "overhead-ns": 9340,
      "exec-ns": 52994,
      "total-ns": 62334,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9316,
      "overhead-ns": 9316,
      "exec-ns": 53296,
      "total-ns": 62612,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9137,
      "overhead-ns": 9137,
      "exec-ns": 52147,
      "total-ns": 61284,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 8922,
      "overhead-ns": 8922,
      "exec-ns": 51441,
      "total-ns": 60363,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 8773,
      "overhead-ns": 8773,
      "exec-ns": 51541,
      "total-ns": 60314,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 8757,
      "overhead-ns": 8757,
      "exec-ns": 51388,
      "total-ns": 60145,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9122,
      "overhead-ns": 9122,
      "exec-ns": 53113,
      "total-ns": 62235,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 8962,
      "overhead-ns": 8962,
      "exec-ns": 52531,
      "total-ns": 61493,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 8960,
      "overhead-ns": 8960,
      "exec-ns": 52293,
      "total-ns": 61253,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9116,
      "overhead-ns": 9116,
      "exec-ns": 51094,
      "total-ns": 60210,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 8813,
      "overhead-ns": 8813,
      "exec-ns": 50825,
      "total-ns": 59638,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 10161,
      "overhead-ns": 10161,
      "exec-ns": 58702,
      "total-ns": 68863,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9990,
      "overhead-ns": 9990,
      "exec-ns": 57661,
      "total-ns": 67651,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9308,
      "overhead-ns": 9308,
      "exec-ns": 55745,
      "total-ns": 65053,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 10031,
      "overhead-ns": 10031,
      "exec-ns": 55872,
      "total-ns": 65903,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9358,
      "overhead-ns": 9358,
      "exec-ns": 54893,
      "total-ns": 64251,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9428,
      "overhead-ns": 9428,
      "exec-ns": 54914,
      "total-ns": 64342,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 9456,
      "overhead-ns": 9456,
      "exec-ns": 54176,
      "total-ns": 63632,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 4.728475634,
  "max-disk-in-mb": 0
}