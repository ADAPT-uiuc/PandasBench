{
  "max-mem-in-mb": 1200,
  "max-mem-in-mb2": 1679,
  "cells": [
    {
      "raw": "# Data manipulation modules\n# import pandas as pd        # R-like data manipulation\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np         # n-dimensional arrays\n\n# For plotting\n# FIRST-AUTHOR: remove plotting\n# import matplotlib as mpl\n# import matplotlib.pyplot as plt      # For base plotting\n# # Seaborn is a library for making statistical graphics\n# # in Python. It is built on top of matplotlib and \n# #  numpy and pandas data structures.\n# import seaborn as sns                # Easier plotting\n\n# # Misc\n# import os\n\n# ## To Show graphs in same window\n# %matplotlib inline\n\n# mpl.style.use(\"seaborn\")\n# plt.style.use(\"seaborn\")\n",
      "rewrite-ns": 687660,
      "overhead-ns": 687660,
      "exec-ns": 395013,
      "total-ns": 1082673,
      "patts-hit": {},
      "rewritten": "exec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n"
    },
    {
      "raw": "######### Begin\n# Read data file\ndata_gv = pd.read_csv(\"./input/gun-violence-data_01-2013_03-2018.scaled.csv\")\n\n# Explore data - First 5 records of Gun Violance data\ndata_gv.head()                          # head()\n\n",
      "rewrite-ns": 588566,
      "overhead-ns": 588566,
      "exec-ns": 6851998600,
      "total-ns": 6852587166,
      "patts-hit": {},
      "rewritten": "data_gv = pd.read_csv('./input/gun-violence-data_01-2013_03-2018.scaled.csv')\ndata_gv.head()\n"
    },
    {
      "raw": "data_gv.columns",
      "rewrite-ns": 104799,
      "overhead-ns": 104799,
      "exec-ns": 754849,
      "total-ns": 859648,
      "patts-hit": {},
      "rewritten": "data_gv.columns\n"
    },
    {
      "raw": "data_gv.columns.values",
      "rewrite-ns": 279267,
      "overhead-ns": 279267,
      "exec-ns": 578348,
      "total-ns": 857615,
      "patts-hit": {},
      "rewritten": "data_gv.columns.values\n"
    },
    {
      "raw": "data_gv.dtypes",
      "rewrite-ns": 58039,
      "overhead-ns": 58039,
      "exec-ns": 1115621,
      "total-ns": 1173660,
      "patts-hit": {},
      "rewritten": "data_gv.dtypes\n"
    },
    {
      "raw": "data_gv.describe()",
      "rewrite-ns": 88941,
      "overhead-ns": 88941,
      "exec-ns": 280808492,
      "total-ns": 280897433,
      "patts-hit": {},
      "rewritten": "data_gv.describe()\n"
    },
    {
      "raw": "data_gv.info()",
      "rewrite-ns": 109832,
      "overhead-ns": 109832,
      "exec-ns": 1492319311,
      "total-ns": 1492429143,
      "patts-hit": {},
      "rewritten": "data_gv.info()\n"
    },
    {
      "raw": "data_gv.shape",
      "rewrite-ns": 77965,
      "overhead-ns": 77965,
      "exec-ns": 597949,
      "total-ns": 675914,
      "patts-hit": {},
      "rewritten": "data_gv.shape\n"
    },
    {
      "raw": "# Removing columns not useful in analysis\ndata_gv.drop([\"incident_characteristics\",\n              \"latitude\",\n              'longitude',\n              \"incident_url\",\n              \"sources\",\n              \"source_url\",\n              \"incident_url_fields_missing\",\n              \"location_description\",\n              \"participant_relationship\",\n              \"notes\",\n    ], axis=1, inplace=True)",
      "rewrite-ns": 954889,
      "overhead-ns": 954889,
      "exec-ns": 162738077,
      "total-ns": 163692966,
      "patts-hit": {},
      "rewritten": "data_gv.drop(['incident_characteristics', 'latitude', 'longitude',\n    'incident_url', 'sources', 'source_url', 'incident_url_fields_missing',\n    'location_description', 'participant_relationship', 'notes'], axis=1,\n    inplace=True)\n"
    },
    {
      "raw": "data_gv['gun_type'].unique()              # Which values",
      "rewrite-ns": 162717,
      "overhead-ns": 162717,
      "exec-ns": 28460820,
      "total-ns": 28623537,
      "patts-hit": {},
      "rewritten": "data_gv['gun_type'].unique()\n"
    },
    {
      "raw": "##Converting object datatype to datetime\ndata_gv['date'] = pd.to_datetime(data_gv['date']) ",
      "rewrite-ns": 613332,
      "overhead-ns": 613332,
      "exec-ns": 132767130,
      "total-ns": 133380462,
      "patts-hit": {},
      "rewritten": "data_gv['date'] = pd.to_datetime(data_gv['date'])\n"
    },
    {
      "raw": "# we can create columns for month, year and weekdays and extract values \n# from date for further analysis\ndata_gv['f_month'] = data_gv['date'].dt.month\ndata_gv['f_year'] = data_gv['date'].dt.year\ndata_gv['f_weekday'] = data_gv['date'].dt.weekday\n\ndata_gv['f_year'] = data_gv['f_year'].astype('object')\ndata_gv['f_month'] = data_gv['f_month'].astype('object')\ndata_gv['f_weekday'] = data_gv['f_weekday'].astype('object')\n\n#Check the datatype of columns are changed\ndata_gv.dtypes",
      "rewrite-ns": 2827196,
      "overhead-ns": 2827196,
      "exec-ns": 105073660,
      "total-ns": 107900856,
      "patts-hit": {},
      "rewritten": "data_gv['f_month'] = data_gv['date'].dt.month\ndata_gv['f_year'] = data_gv['date'].dt.year\ndata_gv['f_weekday'] = data_gv['date'].dt.weekday\ndata_gv['f_year'] = data_gv['f_year'].astype('object')\ndata_gv['f_month'] = data_gv['f_month'].astype('object')\ndata_gv['f_weekday'] = data_gv['f_weekday'].astype('object')\ndata_gv.dtypes\n"
    },
    {
      "raw": "# Created column for total number of persons impacted (injured+killed)\ndata_gv['total_impacted'] = data_gv['n_killed'] + data_gv['n_injured']",
      "rewrite-ns": 642243,
      "overhead-ns": 642243,
      "exec-ns": 2853839,
      "total-ns": 3496082,
      "patts-hit": {},
      "rewritten": "data_gv['total_impacted'] = data_gv['n_killed'] + data_gv['n_injured']\n"
    },
    {
      "raw": "# Checking for null value of column for guns involved and guns stolen \ndata_gv[\"n_guns_involved\"] = data_gv[\"n_guns_involved\"].fillna(value =0)\ndata_gv[\"gun_stolen\"] = data_gv[\"gun_stolen\"].fillna(value = \"0::Unknown\")",
      "rewrite-ns": 740808,
      "overhead-ns": 740808,
      "exec-ns": 34890397,
      "total-ns": 35631205,
      "patts-hit": {
        "IsInplaceUpdate": 1
      },
      "rewritten": "_DIAS_ser = data_gv['n_guns_involved']\nif type(_DIAS_ser) != pd.Series:\n    data_gv['n_guns_involved'] = data_gv['n_guns_involved'].fillna(value=0)\nelse:\n    data_gv['n_guns_involved'].fillna(value=0, inplace=True)\n_DIAS_ser = data_gv['gun_stolen']\nif type(_DIAS_ser) != pd.Series:\n    data_gv['gun_stolen'] = data_gv['gun_stolen'].fillna(value='0::Unknown')\nelse:\n    data_gv['gun_stolen'].fillna(value='0::Unknown', inplace=True)\n"
    },
    {
      "raw": "## Creating multiple columns from Participant's Gender column\ndata_gv[\"participant_gender\"] = data_gv[\"participant_gender\"].fillna(\"0::Unknown\")\n    \ndef gen(n) :                    \n    gen_rows = []               \n    gen_row = str(n).split(\"||\")    \n    for i in gen_row :              \n        g_row = str(i).split(\"::\")  \n        if len(g_row) > 1 :         \n            gen_rows.append(g_row[1])    \n\n    return gen_rows\n\ngen_series = data_gv.participant_gender.apply(gen)\ndata_gv[\"total_participant\"] = gen_series.apply(lambda x: len(x))\ndata_gv[\"male_participant\"] = gen_series.apply(lambda i: i.count(\"Male\"))\ndata_gv[\"female_participant\"] = gen_series.apply(lambda i: i.count(\"Female\"))\ndata_gv[\"unknown_participant\"] = gen_series.apply(lambda i: i.count(\"Unknown\"))\n",
      "rewrite-ns": 5218299,
      "overhead-ns": 5218299,
      "exec-ns": 2103004302,
      "total-ns": 2108222601,
      "patts-hit": {
        "IsInplaceUpdate": 1
      },
      "rewritten": "_DIAS_ser = data_gv['participant_gender']\nif type(_DIAS_ser) != pd.Series:\n    data_gv['participant_gender'] = data_gv['participant_gender'].fillna(\n        '0::Unknown')\nelse:\n    data_gv['participant_gender'].fillna('0::Unknown', inplace=True)\ndef gen(n):\n    gen_rows = []\n    gen_row = str(n).split('||')\n    for i in gen_row:\n        g_row = str(i).split('::')\n        if len(g_row) > 1:\n            gen_rows.append(g_row[1])\n    return gen_rows\ngen_series = data_gv.participant_gender.apply(gen)\ndata_gv['total_participant'] = gen_series.apply(lambda x: len(x))\ndata_gv['male_participant'] = gen_series.apply(lambda i: i.count('Male'))\ndata_gv['female_participant'] = gen_series.apply(lambda i: i.count('Female'))\ndata_gv['unknown_participant'] = gen_series.apply(lambda i: i.count('Unknown'))\n"
    },
    {
      "raw": "# Checking values for new columns\ndata_gv.head()\n",
      "rewrite-ns": 147170,
      "overhead-ns": 147170,
      "exec-ns": 15041610,
      "total-ns": 15188780,
      "patts-hit": {},
      "rewritten": "data_gv.head()\n"
    },
    {
      "raw": "data_gv.shape",
      "rewrite-ns": 69271,
      "overhead-ns": 69271,
      "exec-ns": 531447,
      "total-ns": 600718,
      "patts-hit": {},
      "rewritten": "data_gv.shape\n"
    },
    {
      "raw": "\n##As per assignment lets plot following graphs:\n#i)  Joint Distribution plots\n#ii)  Histograms\n#iii) Kernel Density plots\n#iv) Violin plots\n#v) Box plots\n#vi) FacetGrid",
      "rewrite-ns": 13893,
      "overhead-ns": 13893,
      "exec-ns": 72615,
      "total-ns": 86508,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "###########################Joint Distribution plots############################\n# Draw a jointplot between Number of Person Killed Vs Injured in all incidences\n# FIRST-AUTHOR: remove plotting\n# sns.jointplot(\"n_injured\",\n#               \"n_killed\",\n#               data_gv,\n#               kind='scatter',      # kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }, optional\n#               s=200, color='m', edgecolor=\"skyblue\", linewidth=2)\n",
      "rewrite-ns": 14685,
      "overhead-ns": 14685,
      "exec-ns": 62251,
      "total-ns": 76936,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Draw a jointplot to identify Maximum Number of Person Injured in which incidence\n# FIRST-AUTHOR: remove plotting\n# sns.jointplot(\"incident_id\",\n#               \"n_injured\",\n#               data_gv,\n#               kind='scatter'      # kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }, optional\n#               )",
      "rewrite-ns": 12111,
      "overhead-ns": 12111,
      "exec-ns": 57158,
      "total-ns": 69269,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Draw a jointplot to identify Maximum Number of Person Killed in which incidence\n# FIRST-AUTHOR: remove plotting\n# sns.jointplot(\"incident_id\",\n#               \"n_killed\",\n#               data_gv,\n#               kind='scatter',      # kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }, optional\n#               color=\"Red\",\n#               marginal_kws={'color': 'red'})",
      "rewrite-ns": 12409,
      "overhead-ns": 12409,
      "exec-ns": 54654,
      "total-ns": 67063,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "###############################  Histograms  #########################\n\n# Plot a Histogram for Top 10 Cities with maximum incidents of Gun Violence\nctwise_total = data_gv[[\"incident_id\"]].groupby(data_gv[\"city_or_county\"]).count()\ntop_ct = ctwise_total.sort_values(by='incident_id', ascending=False).head(10)\nprint(top_ct)\n# FIRST-AUTHOR: remove plotting\n# top_ct.plot.barh()\ndel(top_ct)",
      "rewrite-ns": 1189131,
      "overhead-ns": 1189131,
      "exec-ns": 268309528,
      "total-ns": 269498659,
      "patts-hit": {
        "SortHead": 1
      },
      "rewritten": "ctwise_total = data_gv[['incident_id']].groupby(data_gv['city_or_county']\n    ).count()\ntop_ct = dias.rewriter.sort_head(called_on=ctwise_total, by='incident_id',\n    n=10, asc=False, orig=lambda _DIAS_x: _DIAS_x.sort_values(by=\n    'incident_id', ascending=False).head(10))\nprint(top_ct)\ndel top_ct\n"
    },
    {
      "raw": "# Plot a Histogram for Top 10 States with maximum incidents of Gun Violence\nstwise_total = data_gv[[\"incident_id\"]].groupby(data_gv[\"state\"]).count()\ntop_st = stwise_total.sort_values(by='incident_id', ascending=False).head(10)\nprint(top_st)\n# FIRST-AUTHOR: remove plotting\n# top_st.plot.barh()\ndel(top_st)\n",
      "rewrite-ns": 1199655,
      "overhead-ns": 1199655,
      "exec-ns": 52751237,
      "total-ns": 53950892,
      "patts-hit": {
        "SortHead": 1
      },
      "rewritten": "stwise_total = data_gv[['incident_id']].groupby(data_gv['state']).count()\ntop_st = dias.rewriter.sort_head(called_on=stwise_total, by='incident_id',\n    n=10, asc=False, orig=lambda _DIAS_x: _DIAS_x.sort_values(by=\n    'incident_id', ascending=False).head(10))\nprint(top_st)\ndel top_st\n"
    },
    {
      "raw": "# Plot a Histogram for Weekday wise Incidents\nweekwise_total = data_gv[[\"incident_id\"]].groupby(data_gv[\"f_weekday\"]).count()\n# FIRST-AUTHOR: remove plotting\n# weekwise_total.plot.barh()\ndel(weekwise_total)\n# Here, for weekdays Monday is 0 and Sunday is 6.",
      "rewrite-ns": 853270,
      "overhead-ns": 853270,
      "exec-ns": 46193868,
      "total-ns": 47047138,
      "patts-hit": {},
      "rewritten": "weekwise_total = data_gv[['incident_id']].groupby(data_gv['f_weekday']).count()\ndel weekwise_total\n"
    },
    {
      "raw": "############################  Kernel Density plots  #################################\n# Density plot for gendrwise participant\ngenderwise_total = data_gv[[\"total_participant\", \"male_participant\", \"female_participant\", \"unknown_participant\"]].groupby(data_gv[\"f_year\"]).sum()\n# FIRST-AUTHOR: remove plotting\n# dp_gen_plot=sns.kdeplot(genderwise_total['male_participant'], shade=True, color=\"r\")\n# dp_gen_plot=sns.kdeplot(genderwise_total['female_participant'], shade=True, color=\"b\")\n# dp_gen_plot=sns.kdeplot(genderwise_total['unknown_participant'], shade=True, color=\"g\")\n_ = genderwise_total['male_participant']\n_ = genderwise_total['female_participant']\n_ = genderwise_total['unknown_participant']\ndel(genderwise_total)",
      "rewrite-ns": 1659696,
      "overhead-ns": 1659696,
      "exec-ns": 63253150,
      "total-ns": 64912846,
      "patts-hit": {},
      "rewritten": "genderwise_total = data_gv[['total_participant', 'male_participant',\n    'female_participant', 'unknown_participant']].groupby(data_gv['f_year']\n    ).sum()\n_ = genderwise_total['male_participant']\n_ = genderwise_total['female_participant']\n_ = genderwise_total['unknown_participant']\ndel genderwise_total\n"
    },
    {
      "raw": "# Density plot for person injured vs killed on all weekdays\ninj_kill_weektotal = data_gv[[\"n_injured\",\"n_killed\"]].groupby(data_gv[\"f_weekday\"]).sum()\n# FIRST-AUTHOR: remove plotting\n# dp_inj_kill_plot=sns.kdeplot(inj_kill_weektotal['n_injured'], shade=True, color=\"r\")\n# dp_inj_kill_plot=sns.kdeplot(inj_kill_weektotal['n_killed'], shade=True, color=\"b\")\n_ = inj_kill_weektotal['n_injured']\n_ = inj_kill_weektotal['n_killed']\ndel(inj_kill_weektotal)",
      "rewrite-ns": 1380253,
      "overhead-ns": 1380253,
      "exec-ns": 49474907,
      "total-ns": 50855160,
      "patts-hit": {},
      "rewritten": "inj_kill_weektotal = data_gv[['n_injured', 'n_killed']].groupby(data_gv[\n    'f_weekday']).sum()\n_ = inj_kill_weektotal['n_injured']\n_ = inj_kill_weektotal['n_killed']\ndel inj_kill_weektotal\n"
    },
    {
      "raw": "################################## Violin plots #################################\n# Violin Plot for Yearwise Person Injured\n# FIRST-AUTHOR: remove plotting\n# yr_injured_plot = sns.violinplot(\"f_year\", \"n_injured\", data=data_gv,\n#                                  split=True, inner=\"quartile\")\n# yr_injured_plot.set_title(\"Person killed in incidents per Year\")",
      "rewrite-ns": 20494,
      "overhead-ns": 20494,
      "exec-ns": 104849,
      "total-ns": 125343,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "#  Violin Plot for  Yearwise Person killed\n# FIRST-AUTHOR: remove plotting\n# yr_killed_plot = sns.violinplot(\"f_year\", \"n_killed\",\n#                data=data_gv,\n#                split=True,         # If hue variable has two levels, draw half of a violin for each level.\n#                inner=\"quartile\"    #  Options: \u201cbox\u201d, \u201cquartile\u201d, \u201cpoint\u201d, \u201cstick\u201d, None \n#                )\n",
      "rewrite-ns": 22171,
      "overhead-ns": 22171,
      "exec-ns": 89388,
      "total-ns": 111559,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "#Violin Plot for Peron Impacted(Killed/Injured) during gun violence\nImpacted_person_total = data_gv[[\"total_impacted\", \"n_injured\", \"n_killed\"]].groupby(data_gv[\"f_year\"]).sum()\nprint(Impacted_person_total)\n# FIRST-AUTHOR: remove plotting\n# yr_impacted_plot = sns.violinplot(data=Impacted_person_total,\n#                split=True,         # If hue variable has two levels, draw half of a violin for each level.\n#                inner=\"quartile\"    #  Options: \u201cbox\u201d, \u201cquartile\u201d, \u201cpoint\u201d, \u201cstick\u201d, None \n#                )\ndel(Impacted_person_total)",
      "rewrite-ns": 986561,
      "overhead-ns": 986561,
      "exec-ns": 60117782,
      "total-ns": 61104343,
      "patts-hit": {},
      "rewritten": "Impacted_person_total = data_gv[['total_impacted', 'n_injured', 'n_killed']\n    ].groupby(data_gv['f_year']).sum()\nprint(Impacted_person_total)\ndel Impacted_person_total\n"
    },
    {
      "raw": "#Violin Plot for Genderwise Peron involved/impacted during gun violence\ngenderwise_total = data_gv[[\"total_participant\", \"male_participant\", \"female_participant\", \"unknown_participant\"]].groupby(data_gv[\"f_year\"]).sum()\nprint(genderwise_total)\n# FIRST-AUTHOR: remove plotting\n# yr_gender_plot = sns.violinplot(data=genderwise_total,\n#                split=True,         # If hue variable has two levels, draw half of a violin for each level.\n#                inner=\"quartile\"    #  Options: \u201cbox\u201d, \u201cquartile\u201d, \u201cpoint\u201d, \u201cstick\u201d, None \n#                )\n\ndel(genderwise_total)",
      "rewrite-ns": 1115578,
      "overhead-ns": 1115578,
      "exec-ns": 67377736,
      "total-ns": 68493314,
      "patts-hit": {},
      "rewritten": "genderwise_total = data_gv[['total_participant', 'male_participant',\n    'female_participant', 'unknown_participant']].groupby(data_gv['f_year']\n    ).sum()\nprint(genderwise_total)\ndel genderwise_total\n"
    },
    {
      "raw": "###################################  Box plots ##################################\n# Box Plot for Monthwise Person Killed\n# FIRST-AUTHOR: remove plotting\n# mth_killed_plot = sns.boxplot(\"f_month\", \"n_killed\", data= data_gv)\n# mth_killed_plot.set_title(\"Person killed in incidents per month\")\n",
      "rewrite-ns": 22927,
      "overhead-ns": 22927,
      "exec-ns": 102080,
      "total-ns": 125007,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Box Plot for Monthwise Person Injured\n# FIRST-AUTHOR: remove plotting\n# mth_injured_plot = sns.boxplot(\"f_month\", \"n_injured\", data= data_gv)\n# mth_injured_plot.set_title(\"Person injured in incidents per month\")\n",
      "rewrite-ns": 16472,
      "overhead-ns": 16472,
      "exec-ns": 81897,
      "total-ns": 98369,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "####################################### Count Plot #################################\n# Count Plot for Statewise incidences of Gun Violence\n# FIRST-AUTHOR: remove plotting\n# state_inc_plot = sns.countplot(\"state\", data = data_gv)\n# state_inc_plot.set_title(\"Staterwise incidence of Gun Violence\")\n# state_inc_plot.set_xticklabels(state_inc_plot.get_xticklabels(), rotation=90)",
      "rewrite-ns": 12623,
      "overhead-ns": 12623,
      "exec-ns": 68547,
      "total-ns": 81170,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "## Count Plot for State House District wise\n# FIRST-AUTHOR: remove plotting\n# state_inc_plot = sns.countplot(\"state_house_district\", data = data_gv)\n# state_inc_plot.set_title(\"State House District wise incidence of Gun Violence\")\n# state_inc_plot.set_xticklabels(state_inc_plot.get_xticklabels())",
      "rewrite-ns": 10966,
      "overhead-ns": 10966,
      "exec-ns": 61376,
      "total-ns": 72342,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Count Plot for State Senate District wise\n# FIRST-AUTHOR: remove plotting\n# state_inc_plot = sns.countplot(\"state_senate_district\", data = data_gv)\n# state_inc_plot.set_title(\"State Senate District wise incidence of Gun Violence\")\n# state_inc_plot.set_xticklabels(state_inc_plot.get_xticklabels())\n",
      "rewrite-ns": 10826,
      "overhead-ns": 10826,
      "exec-ns": 56894,
      "total-ns": 67720,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Count Plot for Weekwise incidences of Gun Violence\n# FIRST-AUTHOR: remove plotting\n# wk_inc_plot = sns.countplot(\"f_weekday\", data = data_gv)\n# wk_inc_plot.set_title(\"Weekwise incidence of Gun Violence\")",
      "rewrite-ns": 10138,
      "overhead-ns": 10138,
      "exec-ns": 55258,
      "total-ns": 65396,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Count Plot for Monthwise incidences of Gun Violence\n# FIRST-AUTHOR: remove plotting\n# mth_inc_plot = sns.countplot(\"f_month\", data = data_gv)\n# mth_inc_plot.set_title(\"Monthwise incidence of Gun Violence\")",
      "rewrite-ns": 10446,
      "overhead-ns": 10446,
      "exec-ns": 59137,
      "total-ns": 69583,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Count Plot for Yearwise incidences of Gun Violence\n# FIRST-AUTHOR: remove plotting\n# yr_inc_plot = sns.countplot(\"f_year\", data = data_gv)\n# yr_inc_plot.set_title(\"Yearwise incidence of Gun Violence\")",
      "rewrite-ns": 10192,
      "overhead-ns": 10192,
      "exec-ns": 55277,
      "total-ns": 65469,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "################################# FacetGrid ################################\n# Facet Grid Graph for Male/ Female Partipant per Year\n# FIRST-AUTHOR: remove plotting\n# g = sns.FacetGrid(data_gv, hue=\"f_year\", palette=\"Set1\", size=5, hue_kws={\"marker\": [\"^\", \"v\",\"*\",\">\",\"<\",\"o\"]})\n# g.map(plt.scatter, \"male_participant\", \"female_participant\", s=100, linewidth=.5, edgecolor=\"white\")\n# g.add_legend();",
      "rewrite-ns": 11128,
      "overhead-ns": 11128,
      "exec-ns": 53714,
      "total-ns": 64842,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Facet Grid Graphh for Person killed and Injured per Year\n# FIRST-AUTHOR: remove plotting\n# g = sns.FacetGrid(data_gv, hue=\"f_year\", palette=\"Set1\", size=5, hue_kws={\"marker\": [\"^\", \"v\",\"*\",\">\",\"<\",\"o\"]})\n# g.map(plt.scatter, \"n_injured\", \"n_killed\", s=100, linewidth=.5, edgecolor=\"white\")\n# g.add_legend();\n",
      "rewrite-ns": 10452,
      "overhead-ns": 10452,
      "exec-ns": 52088,
      "total-ns": 62540,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "# Facet Grid Graphh for Person killed and Injured on Particular days of the week\n# FIRST-AUTHOR: remove plotting\n# g = sns.FacetGrid(data_gv, hue=\"f_weekday\", palette=\"Set1\", size=5, hue_kws={\"marker\": [\"^\", \"v\",\"h\",\"o\",\">\",\"<\",\"d\"]})\n# g.map(plt.scatter, \"n_injured\", \"n_killed\", s=100, linewidth=.5, edgecolor=\"white\")\n# g.add_legend();",
      "rewrite-ns": 10622,
      "overhead-ns": 10622,
      "exec-ns": 52062,
      "total-ns": 62684,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "## Please UPVOTE, if you Like the Data Exploration and Plotting",
      "rewrite-ns": 9079,
      "overhead-ns": 9079,
      "exec-ns": 51708,
      "total-ns": 60787,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 11.844595398,
  "max-disk-in-mb": 0
}