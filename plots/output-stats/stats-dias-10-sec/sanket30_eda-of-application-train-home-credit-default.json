{
  "max-mem-in-mb": 3942,
  "max-mem-in-mb2": 4364,
  "cells": [
    {
      "raw": "# import pandas as pd\nexec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n# ALEX: remove ML code, plotting\n# from sklearn.preprocessing import LabelEncoder\n# from sklearn.model_selection import train_test_split\n# from sklearn.ensemble import RandomForestClassifier\n# import matplotlib.pyplot as plt\n# %matplotlib inline\n# import seaborn as sns\n# plt.style.use('bmh')\n# plt.style.use('ggplot')\n# plt.rcParams['figure.figsize'] = 20, 10",
      "rewrite-ns": 688207,
      "overhead-ns": 688207,
      "exec-ns": 395845,
      "total-ns": 1084052,
      "patts-hit": {},
      "rewritten": "exec(os.environ['IREWR_IMPORTS'])\nimport numpy as np\n"
    },
    {
      "raw": "def nullremove(df):\n    for i in range(0,len(df.columns)):\n        print(i)\n    ",
      "rewrite-ns": 1098914,
      "overhead-ns": 1098914,
      "exec-ns": 453980,
      "total-ns": 1552894,
      "patts-hit": {},
      "rewritten": "def nullremove(df):\n    for i in range(0, len(df.columns)):\n        print(i)\n"
    },
    {
      "raw": "def descr(df):\n    print(df.describe().round())",
      "rewrite-ns": 777669,
      "overhead-ns": 777669,
      "exec-ns": 353326,
      "total-ns": 1130995,
      "patts-hit": {},
      "rewritten": "def descr(df):\n    print(df.describe().round())\n"
    },
    {
      "raw": "app=pd.read_csv(\"./input/application_train.scaled.csv\")",
      "rewrite-ns": 498593,
      "overhead-ns": 498593,
      "exec-ns": 6342743906,
      "total-ns": 6343242499,
      "patts-hit": {},
      "rewritten": "app = pd.read_csv('./input/application_train.scaled.csv')\n"
    },
    {
      "raw": "print(app.shape)",
      "rewrite-ns": 415107,
      "overhead-ns": 415107,
      "exec-ns": 388143,
      "total-ns": 803250,
      "patts-hit": {},
      "rewritten": "print(app.shape)\n"
    },
    {
      "raw": "application=app.copy()\nprint(application.shape)",
      "rewrite-ns": 610713,
      "overhead-ns": 610713,
      "exec-ns": 235912800,
      "total-ns": 236523513,
      "patts-hit": {},
      "rewritten": "application = app.copy()\nprint(application.shape)\n"
    },
    {
      "raw": "application_object=application.select_dtypes(\"object\")\nprint(application_object.shape)\nprint(application_object.columns)",
      "rewrite-ns": 918193,
      "overhead-ns": 918193,
      "exec-ns": 74101389,
      "total-ns": 75019582,
      "patts-hit": {},
      "rewritten": "application_object = application.select_dtypes('object')\nprint(application_object.shape)\nprint(application_object.columns)\n"
    },
    {
      "raw": "application_object_columns=application_object.columns.tolist()\napplication_columns=application.columns.tolist()\nprint(len(application_object_columns))\nprint(len(application_columns))",
      "rewrite-ns": 1284217,
      "overhead-ns": 1284217,
      "exec-ns": 434950,
      "total-ns": 1719167,
      "patts-hit": {},
      "rewritten": "application_object_columns = application_object.columns.tolist()\napplication_columns = application.columns.tolist()\nprint(len(application_object_columns))\nprint(len(application_columns))\n"
    },
    {
      "raw": "app_if = list(set(application_columns) - set(application_object_columns))\nprint(len(app_if))",
      "rewrite-ns": 908089,
      "overhead-ns": 908089,
      "exec-ns": 335094,
      "total-ns": 1243183,
      "patts-hit": {},
      "rewritten": "app_if = list(set(application_columns) - set(application_object_columns))\nprint(len(app_if))\n"
    },
    {
      "raw": "app_df=application[app_if]\n\nprint(app_df.shape)",
      "rewrite-ns": 581787,
      "overhead-ns": 581787,
      "exec-ns": 195555571,
      "total-ns": 196137358,
      "patts-hit": {},
      "rewritten": "app_df = application[app_if]\nprint(app_df.shape)\n"
    },
    {
      "raw": "app_df.dtypes",
      "rewrite-ns": 83966,
      "overhead-ns": 83966,
      "exec-ns": 2391250,
      "total-ns": 2475216,
      "patts-hit": {},
      "rewritten": "app_df.dtypes\n"
    },
    {
      "raw": "def nullremove(df,percentage):\n   # print(len(df))\n    wantedcolumnlist=[]\n    columnlist=df.columns.tolist()\n    #print(len(columnlist))\n    for i in range(len(columnlist)):\n        columnname=columnlist[i]\n        nan_rows = df[columnname].isnull().sum()\n     #   print(i,nan_rows)\n        nullcount=(nan_rows/len(df))*100\n        #print(nullcount)\n        if nullcount>percentage:\n            print(columnname) \n        else:\n            wantedcolumnlist.append(columnname)    \n        \n    df=df[wantedcolumnlist]\n    return df\n    ",
      "rewrite-ns": 3082406,
      "overhead-ns": 3082406,
      "exec-ns": 743629,
      "total-ns": 3826035,
      "patts-hit": {},
      "rewritten": "def nullremove(df, percentage):\n    wantedcolumnlist = []\n    columnlist = df.columns.tolist()\n    for i in range(len(columnlist)):\n        columnname = columnlist[i]\n        nan_rows = df[columnname].isnull().sum()\n        nullcount = nan_rows / len(df) * 100\n        if nullcount > percentage:\n            print(columnname)\n        else:\n            wantedcolumnlist.append(columnname)\n    df = df[wantedcolumnlist]\n    return df\n"
    },
    {
      "raw": "#app_df=nullremove(app_df,80)",
      "rewrite-ns": 15274,
      "overhead-ns": 15274,
      "exec-ns": 88482,
      "total-ns": 103756,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "app_df.isna().sum()",
      "rewrite-ns": 403975,
      "overhead-ns": 403975,
      "exec-ns": 83926480,
      "total-ns": 84330455,
      "patts-hit": {},
      "rewritten": "app_df.isna().sum()\n"
    },
    {
      "raw": "app_df['DAYDIFF']=abs(app_df['DAYS_BIRTH'])-abs(app_df['DAYS_EMPLOYED'])\n",
      "rewrite-ns": 824520,
      "overhead-ns": 824520,
      "exec-ns": 5047947,
      "total-ns": 5872467,
      "patts-hit": {},
      "rewritten": "app_df['DAYDIFF'] = abs(app_df['DAYS_BIRTH']) - abs(app_df['DAYS_EMPLOYED'])\n"
    },
    {
      "raw": "app_df=app_df[app_df['DAYDIFF']>0]\n",
      "rewrite-ns": 557423,
      "overhead-ns": 557423,
      "exec-ns": 374037747,
      "total-ns": 374595170,
      "patts-hit": {},
      "rewritten": "app_df = app_df[app_df['DAYDIFF'] > 0]\n"
    },
    {
      "raw": "print(app_df.shape)",
      "rewrite-ns": 361241,
      "overhead-ns": 361241,
      "exec-ns": 317809,
      "total-ns": 679050,
      "patts-hit": {},
      "rewritten": "print(app_df.shape)\n"
    },
    {
      "raw": "def meansep(df):\n    highermean=pd.DataFrame()\n    lowermean=pd.DataFrame()\n    columns=df.columns.tolist()\n    for i in range(len(columns)):\n        mean=df[columns[i]].mean()\n        if mean>10:\n            highermean[columns[i]]=df[columns[i]]\n        else:\n            if columns[i]=='DAYS_BIRTH' or columns[i]=='DAYS_EMPLOYED' or columns[i]=='TARGET':\n                highermean[columns[i]]=df[columns[i]]\n            else:\n                lowermean[columns[i]]=df[columns[i]]\n    return highermean,lowermean",
      "rewrite-ns": 4433570,
      "overhead-ns": 4433570,
      "exec-ns": 896560,
      "total-ns": 5330130,
      "patts-hit": {},
      "rewritten": "def meansep(df):\n    highermean = pd.DataFrame()\n    lowermean = pd.DataFrame()\n    columns = df.columns.tolist()\n    for i in range(len(columns)):\n        mean = df[columns[i]].mean()\n        if mean > 10:\n            highermean[columns[i]] = df[columns[i]]\n        elif columns[i] == 'DAYS_BIRTH' or columns[i\n            ] == 'DAYS_EMPLOYED' or columns[i] == 'TARGET':\n            highermean[columns[i]] = df[columns[i]]\n        else:\n            lowermean[columns[i]] = df[columns[i]]\n    return highermean, lowermean\n"
    },
    {
      "raw": "app_dff=app_df.copy()",
      "rewrite-ns": 353317,
      "overhead-ns": 353317,
      "exec-ns": 170826792,
      "total-ns": 171180109,
      "patts-hit": {},
      "rewritten": "app_dff = app_df.copy()\n"
    },
    {
      "raw": "app_dff.isna().sum()",
      "rewrite-ns": 411986,
      "overhead-ns": 411986,
      "exec-ns": 68975420,
      "total-ns": 69387406,
      "patts-hit": {},
      "rewritten": "app_dff.isna().sum()\n"
    },
    {
      "raw": "app_dff=nullremove(app_dff,50)",
      "rewrite-ns": 394166,
      "overhead-ns": 394166,
      "exec-ns": 194660153,
      "total-ns": 195054319,
      "patts-hit": {},
      "rewritten": "app_dff = nullremove(app_dff, 50)\n"
    },
    {
      "raw": "hdf,ldf=meansep(app_dff)\nprint(hdf.shape,ldf.shape)",
      "rewrite-ns": 816532,
      "overhead-ns": 816532,
      "exec-ns": 270870532,
      "total-ns": 271687064,
      "patts-hit": {},
      "rewritten": "hdf, ldf = meansep(app_dff)\nprint(hdf.shape, ldf.shape)\n"
    },
    {
      "raw": "hdf.isna().sum()",
      "rewrite-ns": 414812,
      "overhead-ns": 414812,
      "exec-ns": 7609668,
      "total-ns": 8024480,
      "patts-hit": {},
      "rewritten": "hdf.isna().sum()\n"
    },
    {
      "raw": "hdf.dtypes",
      "rewrite-ns": 73137,
      "overhead-ns": 73137,
      "exec-ns": 1054108,
      "total-ns": 1127245,
      "patts-hit": {},
      "rewritten": "hdf.dtypes\n"
    },
    {
      "raw": "hdf['AMT_ANNUITY']=hdf['AMT_ANNUITY'].fillna(hdf['AMT_ANNUITY'].mean())\nhdf['AMT_GOODS_PRICE']=hdf['AMT_GOODS_PRICE'].fillna(hdf['AMT_GOODS_PRICE'].mean())",
      "rewrite-ns": 833057,
      "overhead-ns": 833057,
      "exec-ns": 7763062,
      "total-ns": 8596119,
      "patts-hit": {
        "IsInplaceUpdate": 1
      },
      "rewritten": "_DIAS_ser = hdf['AMT_ANNUITY']\nif type(_DIAS_ser) != pd.Series:\n    hdf['AMT_ANNUITY'] = hdf['AMT_ANNUITY'].fillna(hdf['AMT_ANNUITY'].mean())\nelse:\n    hdf['AMT_ANNUITY'].fillna(hdf['AMT_ANNUITY'].mean(), inplace=True)\n_DIAS_ser = hdf['AMT_GOODS_PRICE']\nif type(_DIAS_ser) != pd.Series:\n    hdf['AMT_GOODS_PRICE'] = hdf['AMT_GOODS_PRICE'].fillna(hdf[\n        'AMT_GOODS_PRICE'].mean())\nelse:\n    hdf['AMT_GOODS_PRICE'].fillna(hdf['AMT_GOODS_PRICE'].mean(), inplace=True)\n"
    },
    {
      "raw": "descr(hdf)",
      "rewrite-ns": 283076,
      "overhead-ns": 283076,
      "exec-ns": 202542661,
      "total-ns": 202825737,
      "patts-hit": {},
      "rewritten": "descr(hdf)\n"
    },
    {
      "raw": "hdf=hdf[hdf['AMT_INCOME_TOTAL']<=2000000]\nhdf=hdf[hdf['AMT_CREDIT']<=900000]\nhdf=hdf[hdf['AMT_GOODS_PRICE']<=900000]\nhdf=hdf[hdf['AMT_ANNUITY']<=35000]",
      "rewrite-ns": 1803734,
      "overhead-ns": 1803734,
      "exec-ns": 67671464,
      "total-ns": 69475198,
      "patts-hit": {},
      "rewritten": "hdf = hdf[hdf['AMT_INCOME_TOTAL'] <= 2000000]\nhdf = hdf[hdf['AMT_CREDIT'] <= 900000]\nhdf = hdf[hdf['AMT_GOODS_PRICE'] <= 900000]\nhdf = hdf[hdf['AMT_ANNUITY'] <= 35000]\n"
    },
    {
      "raw": "hdf[hdf['DAYS_EMPLOYED']==-17912]",
      "rewrite-ns": 575910,
      "overhead-ns": 575910,
      "exec-ns": 8049978,
      "total-ns": 8625888,
      "patts-hit": {},
      "rewritten": "hdf[hdf['DAYS_EMPLOYED'] == -17912]\n"
    },
    {
      "raw": "application[application['AMT_CREDIT']==4050000.0]",
      "rewrite-ns": 495835,
      "overhead-ns": 495835,
      "exec-ns": 50021429,
      "total-ns": 50517264,
      "patts-hit": {},
      "rewritten": "application[application['AMT_CREDIT'] == 4050000.0]\n"
    },
    {
      "raw": "hdf.columns.tolist()",
      "rewrite-ns": 341697,
      "overhead-ns": 341697,
      "exec-ns": 612658,
      "total-ns": 954355,
      "patts-hit": {},
      "rewritten": "hdf.columns.tolist()\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# hdf[['AMT_GOODS_PRICE',\n#   'AMT_INCOME_TOTAL',\n#  'AMT_ANNUITY',\n#  'DAYS_EMPLOYED',\n#   'DAYS_BIRTH',\n#   'AMT_CREDIT',\n#  'DAYDIFF']].hist(figsize=(16, 10), bins=50, xlabelsize=8, ylabelsize=8);\nhdf[['AMT_GOODS_PRICE',\n  'AMT_INCOME_TOTAL',\n 'AMT_ANNUITY',\n 'DAYS_EMPLOYED',\n  'DAYS_BIRTH',\n  'AMT_CREDIT',\n 'DAYDIFF']]",
      "rewrite-ns": 537322,
      "overhead-ns": 537322,
      "exec-ns": 12267314,
      "total-ns": 12804636,
      "patts-hit": {},
      "rewritten": "hdf[['AMT_GOODS_PRICE', 'AMT_INCOME_TOTAL', 'AMT_ANNUITY', 'DAYS_EMPLOYED',\n    'DAYS_BIRTH', 'AMT_CREDIT', 'DAYDIFF']]\n"
    },
    {
      "raw": "correlation = hdf[['AMT_GOODS_PRICE',\n  'AMT_INCOME_TOTAL',\n 'AMT_ANNUITY',\n 'DAYS_EMPLOYED',\n  'DAYS_BIRTH',\n  'AMT_CREDIT',\n 'DAYDIFF']].corr()\n# ALEX: remove plotting\n# plt.figure(figsize=(7,7))\n# flatui = [\"#9b59b6\", \"#3498db\", \"#95a5a6\", \"#e74c3c\", \"#34495e\", \"#2ecc71\"]\n# sns.heatmap(correlation, vmax=1, square=True,annot=True,cmap=flatui)\n# plt.title('Correlation between different fearures')",
      "rewrite-ns": 734956,
      "overhead-ns": 734956,
      "exec-ns": 70948173,
      "total-ns": 71683129,
      "patts-hit": {},
      "rewritten": "correlation = hdf[['AMT_GOODS_PRICE', 'AMT_INCOME_TOTAL', 'AMT_ANNUITY',\n    'DAYS_EMPLOYED', 'DAYS_BIRTH', 'AMT_CREDIT', 'DAYDIFF']].corr()\n"
    },
    {
      "raw": "# ALEX: remove ML code\n# from sklearn.preprocessing import Normalizer\n# normalized_application = Normalizer().fit_transform(hdf[['AMT_GOODS_PRICE','AMT_INCOME_TOTAL','AMT_ANNUITY','AMT_CREDIT','DAYDIFF']])\n#print (normalized_application)\nnormalized_application = hdf[['AMT_GOODS_PRICE','AMT_INCOME_TOTAL','AMT_ANNUITY','AMT_CREDIT','DAYDIFF']]\ncorrelation=pd.DataFrame(normalized_application).corr()\ncorrelation.columns=['AMT_GOODS_PRICE','AMT_INCOME_TOTAL','AMT_ANNUITY','AMT_CREDIT','DAYDIFF']\n# ALEX: remove plotting\n# plt.figure(figsize=(8,8))\n# flatui = [\"#9b59b6\", \"#3498db\", \"#95a5a6\", \"#e74c3c\", \"#34495e\", \"#2ecc71\"]\n# sns.heatmap(correlation, vmax=1, square=True,annot=True,cmap=flatui)\n# plt.title('Correlation between different fearures')",
      "rewrite-ns": 1374134,
      "overhead-ns": 1374134,
      "exec-ns": 40248734,
      "total-ns": 41622868,
      "patts-hit": {},
      "rewritten": "normalized_application = hdf[['AMT_GOODS_PRICE', 'AMT_INCOME_TOTAL',\n    'AMT_ANNUITY', 'AMT_CREDIT', 'DAYDIFF']]\ncorrelation = pd.DataFrame(normalized_application).corr()\ncorrelation.columns = ['AMT_GOODS_PRICE', 'AMT_INCOME_TOTAL', 'AMT_ANNUITY',\n    'AMT_CREDIT', 'DAYDIFF']\n"
    },
    {
      "raw": "from numpy import log",
      "rewrite-ns": 170247,
      "overhead-ns": 170247,
      "exec-ns": 277624,
      "total-ns": 447871,
      "patts-hit": {},
      "rewritten": "from numpy import log\n"
    },
    {
      "raw": "hdf.head(2)",
      "rewrite-ns": 133913,
      "overhead-ns": 133913,
      "exec-ns": 7073183,
      "total-ns": 7207096,
      "patts-hit": {},
      "rewritten": "hdf.head(2)\n"
    },
    {
      "raw": "hd=hdf.copy()\nhd['AMT_INCOME_TOTAL_log']=log(hdf['AMT_INCOME_TOTAL'])\n\n\n\n\n",
      "rewrite-ns": 770343,
      "overhead-ns": 770343,
      "exec-ns": 5174142,
      "total-ns": 5944485,
      "patts-hit": {},
      "rewritten": "hd = hdf.copy()\nhd['AMT_INCOME_TOTAL_log'] = log(hdf['AMT_INCOME_TOTAL'])\n"
    },
    {
      "raw": "hd.head(2)",
      "rewrite-ns": 117276,
      "overhead-ns": 117276,
      "exec-ns": 7744997,
      "total-ns": 7862273,
      "patts-hit": {},
      "rewritten": "hd.head(2)\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# hd[['AMT_GOODS_PRICE',\n#   'AMT_INCOME_TOTAL_log',\n#  'AMT_ANNUITY',\n#   'AMT_CREDIT',\n#  'DAYDIFF']].hist(figsize=(16, 10), bins=50, xlabelsize=8, ylabelsize=8);\nhd[['AMT_GOODS_PRICE',\n  'AMT_INCOME_TOTAL_log',\n 'AMT_ANNUITY',\n  'AMT_CREDIT',\n 'DAYDIFF']]",
      "rewrite-ns": 487328,
      "overhead-ns": 487328,
      "exec-ns": 13923403,
      "total-ns": 14410731,
      "patts-hit": {},
      "rewritten": "hd[['AMT_GOODS_PRICE', 'AMT_INCOME_TOTAL_log', 'AMT_ANNUITY', 'AMT_CREDIT',\n    'DAYDIFF']]\n"
    },
    {
      "raw": "# ALEX: remove ML code\n# from sklearn.preprocessing import Normalizer\n# normalized_application = Normalizer().fit_transform(hd[['AMT_GOODS_PRICE',\n#   'AMT_INCOME_TOTAL_log',\n#  'AMT_ANNUITY',\n#   'AMT_CREDIT',\n#  'DAYDIFF']])\nnormalized_application = hd[['AMT_GOODS_PRICE',\n  'AMT_INCOME_TOTAL_log',\n 'AMT_ANNUITY',\n  'AMT_CREDIT',\n 'DAYDIFF']]\n#print (normalized_application)\ncorrelation=pd.DataFrame(normalized_application).corr()\ncorrelation.columns=['AMT_GOODS_PRICE',\n  'AMT_INCOME_TOTAL_log',\n 'AMT_ANNUITY',\n  'AMT_CREDIT',\n 'DAYDIFF']\n# ALEX: remove plotting\n# plt.figure(figsize=(8,8))\n# flatui = [\"#9b59b6\", \"#3498db\", \"#95a5a6\", \"#e74c3c\", \"#34495e\", \"#2ecc71\"]\n# sns.heatmap(correlation, vmax=1, square=True,annot=True,cmap=flatui)\n# plt.title('Correlation between different fearures')",
      "rewrite-ns": 1364467,
      "overhead-ns": 1364467,
      "exec-ns": 40050260,
      "total-ns": 41414727,
      "patts-hit": {},
      "rewritten": "normalized_application = hd[['AMT_GOODS_PRICE', 'AMT_INCOME_TOTAL_log',\n    'AMT_ANNUITY', 'AMT_CREDIT', 'DAYDIFF']]\ncorrelation = pd.DataFrame(normalized_application).corr()\ncorrelation.columns = ['AMT_GOODS_PRICE', 'AMT_INCOME_TOTAL_log',\n    'AMT_ANNUITY', 'AMT_CREDIT', 'DAYDIFF']\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# plt.scatter(hd['AMT_ANNUITY'],hd['AMT_CREDIT'])\n# plt.xlabel(\"amt annuity\")\n# plt.ylabel(\"amt credit\")\n_ = hd['AMT_ANNUITY']\n_ = hd['AMT_CREDIT']",
      "rewrite-ns": 577833,
      "overhead-ns": 577833,
      "exec-ns": 381405,
      "total-ns": 959238,
      "patts-hit": {},
      "rewritten": "_ = hd['AMT_ANNUITY']\n_ = hd['AMT_CREDIT']\n"
    },
    {
      "raw": "# ALEX: remove plotting\n# plt.scatter(hd['AMT_GOODS_PRICE'],hd['DAYDIFF'])\n# plt.xlabel(\"amt good\")\n# plt.ylabel(\"amt credit\")\n_ = hd['AMT_GOODS_PRICE']\n_ = hd['DAYDIFF']",
      "rewrite-ns": 565878,
      "overhead-ns": 565878,
      "exec-ns": 339905,
      "total-ns": 905783,
      "patts-hit": {},
      "rewritten": "_ = hd['AMT_GOODS_PRICE']\n_ = hd['DAYDIFF']\n"
    },
    {
      "raw": "hd.dtypes",
      "rewrite-ns": 64431,
      "overhead-ns": 64431,
      "exec-ns": 1136023,
      "total-ns": 1200454,
      "patts-hit": {},
      "rewritten": "hd.dtypes\n"
    },
    {
      "raw": "hd.columns.tolist()",
      "rewrite-ns": 341687,
      "overhead-ns": 341687,
      "exec-ns": 617203,
      "total-ns": 958890,
      "patts-hit": {},
      "rewritten": "hd.columns.tolist()\n"
    },
    {
      "raw": "hd=hd[['SK_ID_CURR',\n 'AMT_GOODS_PRICE',\n 'DAYS_EMPLOYED',\n 'TARGET',\n 'AMT_CREDIT',\n 'DAYS_BIRTH',\n 'AMT_ANNUITY',\n 'HOUR_APPR_PROCESS_START',\n 'DAYDIFF',\n 'AMT_INCOME_TOTAL_log']]\n\nhd.to_csv(\"tt.csv\",index=False)",
      "rewrite-ns": 1035592,
      "overhead-ns": 1035592,
      "exec-ns": 1767876791,
      "total-ns": 1768912383,
      "patts-hit": {},
      "rewritten": "hd = hd[['SK_ID_CURR', 'AMT_GOODS_PRICE', 'DAYS_EMPLOYED', 'TARGET',\n    'AMT_CREDIT', 'DAYS_BIRTH', 'AMT_ANNUITY', 'HOUR_APPR_PROCESS_START',\n    'DAYDIFF', 'AMT_INCOME_TOTAL_log']]\nhd.to_csv('tt.csv', index=False)\n"
    },
    {
      "raw": "hd.shape",
      "rewrite-ns": 136905,
      "overhead-ns": 136905,
      "exec-ns": 1105655,
      "total-ns": 1242560,
      "patts-hit": {},
      "rewritten": "hd.shape\n"
    },
    {
      "raw": "hd.isna().sum()",
      "rewrite-ns": 553770,
      "overhead-ns": 553770,
      "exec-ns": 7209022,
      "total-ns": 7762792,
      "patts-hit": {},
      "rewritten": "hd.isna().sum()\n"
    },
    {
      "raw": "ldf.isna().sum()",
      "rewrite-ns": 516766,
      "overhead-ns": 516766,
      "exec-ns": 51731578,
      "total-ns": 52248344,
      "patts-hit": {},
      "rewritten": "ldf.isna().sum()\n"
    },
    {
      "raw": "appobj=application[application_object_columns]",
      "rewrite-ns": 453745,
      "overhead-ns": 453745,
      "exec-ns": 108495859,
      "total-ns": 108949604,
      "patts-hit": {},
      "rewritten": "appobj = application[application_object_columns]\n"
    },
    {
      "raw": "appobj.head(2)",
      "rewrite-ns": 210798,
      "overhead-ns": 210798,
      "exec-ns": 12990722,
      "total-ns": 13201520,
      "patts-hit": {},
      "rewritten": "appobj.head(2)\n"
    },
    {
      "raw": "appobj.isna().sum()",
      "rewrite-ns": 553965,
      "overhead-ns": 553965,
      "exec-ns": 1374168892,
      "total-ns": 1374722857,
      "patts-hit": {},
      "rewritten": "appobj.isna().sum()\n"
    },
    {
      "raw": "",
      "rewrite-ns": 26271,
      "overhead-ns": 26271,
      "exec-ns": 111185,
      "total-ns": 137456,
      "patts-hit": {},
      "rewritten": ""
    },
    {
      "raw": "",
      "rewrite-ns": 16988,
      "overhead-ns": 16988,
      "exec-ns": 91080,
      "total-ns": 108068,
      "patts-hit": {},
      "rewritten": ""
    }
  ],
  "total-time-in-sec": 11.927831721,
  "max-disk-in-mb": 0
}